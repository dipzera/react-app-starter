{"ast":null,"code":"var _jsxFileName = \"/home/vlad/github/react-emilus-boilerplate/src/components/layout-components/TopNav.tsx\";\nimport * as React from \"react\";\nimport { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { APP_NAME } from \"configs/AppConfig\";\nimport { NAV_TYPE_TOP } from \"constants/ThemeConstant\";\nimport utils from \"utils\";\nimport TranslateText from \"utils/translate\";\nimport MenuContent from \"components/layout-components/MenuContent\";\nexport const TopNav = ({\n  topNavColor,\n  localization = true,\n  routeInfo\n}) => {\n  const props = {\n    topNavColor,\n    localization\n  };\n  useEffect(() => {\n    if (routeInfo) {\n      const title = routeInfo.title;\n      document.title = `${TranslateText(title)} | ${APP_NAME}`;\n    } else {\n      document.title = APP_NAME;\n    }\n  }, [routeInfo]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `top-nav ${utils.getColorContrast(topNavColor)}`,\n    style: {\n      backgroundColor: topNavColor\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"top-nav-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MenuContent, Object.assign({\n    type: NAV_TYPE_TOP\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }))));\n};\n\nconst mapStateToProps = ({\n  theme\n}) => {\n  const {\n    topNavColor\n  } = theme;\n  return {\n    topNavColor\n  };\n};\n\nexport default connect(mapStateToProps)(TopNav);","map":{"version":3,"sources":["/home/vlad/github/react-emilus-boilerplate/src/components/layout-components/TopNav.tsx"],"names":["React","useEffect","connect","APP_NAME","NAV_TYPE_TOP","utils","TranslateText","MenuContent","TopNav","topNavColor","localization","routeInfo","props","title","document","getColorContrast","backgroundColor","mapStateToProps","theme"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,SAASC,YAAT,QAA6B,yBAA7B;AAGA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,WAAP,MAAwB,0CAAxB;AAQA,OAAO,MAAMC,MAAM,GAAG,CAAC;AACrBC,EAAAA,WADqB;AAErBC,EAAAA,YAAY,GAAG,IAFM;AAGrBC,EAAAA;AAHqB,CAAD,KAIH;AACjB,QAAMC,KAAK,GAAG;AAAEH,IAAAA,WAAF;AAAeC,IAAAA;AAAf,GAAd;AACAT,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIU,SAAJ,EAAe;AACb,YAAME,KAAK,GAAGF,SAAS,CAACE,KAAxB;AACAC,MAAAA,QAAQ,CAACD,KAAT,GAAkB,GAAEP,aAAa,CAACO,KAAD,CAAQ,MAAKV,QAAS,EAAvD;AACD,KAHD,MAGO;AACLW,MAAAA,QAAQ,CAACD,KAAT,GAAiBV,QAAjB;AACD;AACF,GAPQ,EAON,CAACQ,SAAD,CAPM,CAAT;AAQA,sBACE;AACE,IAAA,SAAS,EAAG,WAAUN,KAAK,CAACU,gBAAN,CAAuBN,WAAvB,CAAoC,EAD5D;AAEE,IAAA,KAAK,EAAE;AAAEO,MAAAA,eAAe,EAAEP;AAAnB,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAEL;AAAnB,KAAqCQ,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CAJF,CADF;AAUD,CAxBM;;AA0BP,MAAMK,eAAe,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAuB;AAC7C,QAAM;AAAET,IAAAA;AAAF,MAAkBS,KAAxB;AACA,SAAO;AAAET,IAAAA;AAAF,GAAP;AACD,CAHD;;AAKA,eAAeP,OAAO,CAACe,eAAD,CAAP,CAAyBT,MAAzB,CAAf","sourcesContent":["import * as React from \"react\";\nimport { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { APP_NAME } from \"configs/AppConfig\";\nimport { NAV_TYPE_TOP } from \"constants/ThemeConstant\";\nimport { IState } from \"redux/reducers\";\nimport { ITheme } from \"redux/reducers/Theme\";\nimport utils from \"utils\";\nimport TranslateText from \"utils/translate\";\nimport MenuContent from \"components/layout-components/MenuContent\";\n\ninterface TopNavProps {\n  topNavColor?: any;\n  localization?: boolean;\n  routeInfo?: any;\n}\n\nexport const TopNav = ({\n  topNavColor,\n  localization = true,\n  routeInfo,\n}: TopNavProps) => {\n  const props = { topNavColor, localization };\n  useEffect(() => {\n    if (routeInfo) {\n      const title = routeInfo.title;\n      document.title = `${TranslateText(title)} | ${APP_NAME}`;\n    } else {\n      document.title = APP_NAME;\n    }\n  }, [routeInfo]);\n  return (\n    <div\n      className={`top-nav ${utils.getColorContrast(topNavColor)}`}\n      style={{ backgroundColor: topNavColor }}\n    >\n      <div className=\"top-nav-wrapper\">\n        <MenuContent type={NAV_TYPE_TOP} {...props} />\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ theme }: IState) => {\n  const { topNavColor } = theme as ITheme;\n  return { topNavColor };\n};\n\nexport default connect(mapStateToProps)(TopNav);\n"]},"metadata":{},"sourceType":"module"}