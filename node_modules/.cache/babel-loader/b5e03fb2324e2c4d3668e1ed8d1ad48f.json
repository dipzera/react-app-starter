{"ast":null,"code":"import { PartitionPattern } from '../PartitionPattern';\nimport { invariant } from '../utils';\nexport function MakePartsList(pattern, unit, parts) {\n  var patternParts = PartitionPattern(pattern);\n  var result = [];\n\n  for (var _i = 0, patternParts_1 = patternParts; _i < patternParts_1.length; _i++) {\n    var patternPart = patternParts_1[_i];\n\n    if (patternPart.type === 'literal') {\n      result.push({\n        type: 'literal',\n        value: patternPart.value\n      });\n    } else {\n      invariant(patternPart.type === '0', \"Malformed pattern \" + pattern);\n\n      for (var _a = 0, parts_1 = parts; _a < parts_1.length; _a++) {\n        var part = parts_1[_a];\n        result.push({\n          type: part.type,\n          value: part.value,\n          unit: unit\n        });\n      }\n    }\n  }\n\n  return result;\n}","map":null,"metadata":{},"sourceType":"module"}