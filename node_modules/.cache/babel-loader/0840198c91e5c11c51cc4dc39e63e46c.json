{"ast":null,"code":"var _jsxFileName = \"/home/vlad/github/react-emilus-boilerplate/src/components/layout-components/AppBreadcrumb.tsx\";\nimport React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { Breadcrumb } from \"antd\";\nimport navigationConfig from \"configs/NavigationConfig\";\nimport IntlMessage from \"components/util-components/IntlMessage\";\nlet breadcrumbData = {\n  \"/app\": /*#__PURE__*/React.createElement(IntlMessage, {\n    id: \"home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 11\n    }\n  })\n};\nnavigationConfig.forEach((elm, i) => {\n  const assignBreadcrumb = obj => breadcrumbData[obj.path] = /*#__PURE__*/React.createElement(IntlMessage, {\n    id: obj.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 33\n    }\n  });\n\n  assignBreadcrumb(elm);\n\n  if (elm.submenu) {\n    elm.submenu.forEach(elm => {\n      assignBreadcrumb(elm);\n\n      if (elm.submenu) {\n        elm.submenu.forEach(elm => {\n          assignBreadcrumb(elm);\n        });\n      }\n    });\n  }\n});\nconst BreadcrumbRoute = withRouter(props => {\n  const {\n    location\n  } = props;\n  const pathSnippets = location.pathname.split(\"/\").filter(i => i);\n  const buildBreadcrumb = pathSnippets.map((_, index) => {\n    const url = `/${pathSnippets.slice(0, index + 1).join(\"/\")}`;\n    return /*#__PURE__*/React.createElement(Breadcrumb.Item, {\n      key: url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }\n    });\n  });\n  return /*#__PURE__*/React.createElement(Breadcrumb, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 10\n    }\n  }, buildBreadcrumb);\n});\nexport class AppBreadcrumb extends Component {\n  render() {\n    return /*#__PURE__*/React.createElement(BreadcrumbRoute, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 12\n      }\n    });\n  }\n\n}\nexport default AppBreadcrumb;","map":{"version":3,"sources":["/home/vlad/github/react-emilus-boilerplate/src/components/layout-components/AppBreadcrumb.tsx"],"names":["React","Component","withRouter","Breadcrumb","navigationConfig","IntlMessage","breadcrumbData","forEach","elm","i","assignBreadcrumb","obj","path","title","submenu","BreadcrumbRoute","props","location","pathSnippets","pathname","split","filter","buildBreadcrumb","map","_","index","url","slice","join","AppBreadcrumb","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,UAAT,QAA2B,MAA3B;AACA,OAAOC,gBAAP,MAA6B,0BAA7B;AACA,OAAOC,WAAP,MAAwB,wCAAxB;AACA,IAAIC,cAAc,GAAG;AACnB,uBAAQ,oBAAC,WAAD;AAAa,IAAA,EAAE,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADW,CAArB;AAIAF,gBAAgB,CAACG,OAAjB,CAAyB,CAACC,GAAD,EAAMC,CAAN,KAAY;AACnC,QAAMC,gBAAgB,GAAIC,GAAD,IACtBL,cAAc,CAACK,GAAG,CAACC,IAAL,CAAd,gBAA2B,oBAAC,WAAD;AAAa,IAAA,EAAE,EAAED,GAAG,CAACE,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAD9B;;AAEAH,EAAAA,gBAAgB,CAACF,GAAD,CAAhB;;AACA,MAAIA,GAAG,CAACM,OAAR,EAAiB;AACfN,IAAAA,GAAG,CAACM,OAAJ,CAAYP,OAAZ,CAAqBC,GAAD,IAAc;AAChCE,MAAAA,gBAAgB,CAACF,GAAD,CAAhB;;AACA,UAAIA,GAAG,CAACM,OAAR,EAAiB;AACfN,QAAAA,GAAG,CAACM,OAAJ,CAAYP,OAAZ,CAAqBC,GAAD,IAAS;AAC3BE,UAAAA,gBAAgB,CAACF,GAAD,CAAhB;AACD,SAFD;AAGD;AACF,KAPD;AAQD;AACF,CAdD;AAgBA,MAAMO,eAAe,GAAGb,UAAU,CAAEc,KAAD,IAAW;AAC5C,QAAM;AAAEC,IAAAA;AAAF,MAAeD,KAArB;AACA,QAAME,YAAY,GAAGD,QAAQ,CAACE,QAAT,CAAkBC,KAAlB,CAAwB,GAAxB,EAA6BC,MAA7B,CAAqCZ,CAAD,IAAYA,CAAhD,CAArB;AACA,QAAMa,eAAe,GAAGJ,YAAY,CAACK,GAAb,CAAiB,CAACC,CAAD,EAASC,KAAT,KAAwB;AAC/D,UAAMC,GAAG,GAAI,IAAGR,YAAY,CAACS,KAAb,CAAmB,CAAnB,EAAsBF,KAAK,GAAG,CAA9B,EAAiCG,IAAjC,CAAsC,GAAtC,CAA2C,EAA3D;AACA,wBACE,oBAAC,UAAD,CAAY,IAAZ;AAAiB,MAAA,GAAG,EAAEF,GAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAKD,GAPuB,CAAxB;AASA,sBAAO,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAaJ,eAAb,CAAP;AACD,CAbiC,CAAlC;AAeA,OAAO,MAAMO,aAAN,SAA4B5B,SAA5B,CAAsC;AAC3C6B,EAAAA,MAAM,GAAG;AACP,wBAAO,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAH0C;AAM7C,eAAeD,aAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { Breadcrumb } from \"antd\";\nimport navigationConfig from \"configs/NavigationConfig\";\nimport IntlMessage from \"components/util-components/IntlMessage\";\nlet breadcrumbData = {\n  \"/app\": <IntlMessage id=\"home\" />,\n} as { [key: string]: any };\n\nnavigationConfig.forEach((elm, i) => {\n  const assignBreadcrumb = (obj: any) =>\n    (breadcrumbData[obj.path] = <IntlMessage id={obj.title} />);\n  assignBreadcrumb(elm);\n  if (elm.submenu) {\n    elm.submenu.forEach((elm: any) => {\n      assignBreadcrumb(elm);\n      if (elm.submenu) {\n        elm.submenu.forEach((elm) => {\n          assignBreadcrumb(elm);\n        });\n      }\n    });\n  }\n});\n\nconst BreadcrumbRoute = withRouter((props) => {\n  const { location } = props;\n  const pathSnippets = location.pathname.split(\"/\").filter((i: any) => i);\n  const buildBreadcrumb = pathSnippets.map((_: any, index: any) => {\n    const url = `/${pathSnippets.slice(0, index + 1).join(\"/\")}`;\n    return (\n      <Breadcrumb.Item key={url}>\n        {/*<Link to={url}>{breadcrumbData[url]}</Link>*/}\n      </Breadcrumb.Item>\n    );\n  });\n\n  return <Breadcrumb>{buildBreadcrumb}</Breadcrumb>;\n});\n\nexport class AppBreadcrumb extends Component {\n  render() {\n    return <BreadcrumbRoute />;\n  }\n}\n\nexport default AppBreadcrumb;\n"]},"metadata":{},"sourceType":"module"}