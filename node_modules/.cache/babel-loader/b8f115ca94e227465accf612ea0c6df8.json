{"ast":null,"code":"var _jsxFileName = \"/home/vlad/github/react-emilus-boilerplate/src/components/layout-components/HeaderNav.tsx\";\nimport * as React from \"react\";\nimport { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Menu, Layout } from \"antd\";\nimport { MenuFoldOutlined, MenuUnfoldOutlined } from \"@ant-design/icons\";\nimport Logo from \"components/layout-components/Logo\";\nimport NavPanel from \"components/layout-components/NavPanel\";\nimport NavSearch from \"components/layout-components/NavSearch\";\nimport { toggleCollapsedNav, onMobileNavToggle } from \"redux/actions/Theme\";\nimport { NAV_TYPE_TOP, SIDE_NAV_COLLAPSED_WIDTH, SIDE_NAV_WIDTH } from \"constants/ThemeConstant\";\nimport utils from \"utils\";\nimport NavProfile from \"components/layout-components/NavProfile\";\nconst {\n  Header\n} = Layout;\n\nconst HeaderNav = props => {\n  const {\n    navCollapsed,\n    mobileNav,\n    navType,\n    headerNavColor,\n    toggleCollapsedNav,\n    onMobileNavToggle,\n    isMobile\n  } = props;\n  const [searchActive, setSearchActive] = useState(false);\n\n  const onSearchClose = () => {\n    setSearchActive(false);\n  };\n\n  const onToggle = () => {\n    if (!isMobile) {\n      toggleCollapsedNav(!navCollapsed);\n    } else {\n      onMobileNavToggle(!mobileNav);\n    }\n  };\n\n  const isNavTop = navType === NAV_TYPE_TOP;\n  const mode = utils.getColorContrast(headerNavColor);\n\n  const getNavWidth = () => {\n    if (isNavTop || isMobile) {\n      return \"0px\";\n    }\n\n    if (navCollapsed) {\n      return `${SIDE_NAV_COLLAPSED_WIDTH}px`;\n    } else {\n      return `${SIDE_NAV_WIDTH}px`;\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Header, {\n    className: `app-header ${mode}`,\n    style: {\n      backgroundColor: headerNavColor\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `app-header-wrapper ${isNavTop ? \"layout-top-nav\" : \"\"}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Logo, {\n    logoType: mode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"nav\",\n    style: {\n      width: `calc(100% - ${getNavWidth()})`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"nav-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Menu, {\n    mode: \"horizontal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, isNavTop && !isMobile ? null : /*#__PURE__*/React.createElement(Menu.Item, {\n    key: \"0\",\n    onClick: () => {\n      onToggle();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, navCollapsed || isMobile ? /*#__PURE__*/React.createElement(MenuUnfoldOutlined, {\n    className: \"nav-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  }) : /*#__PURE__*/React.createElement(MenuFoldOutlined, {\n    className: \"nav-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"nav-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(NavPanel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(NavProfile, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(NavSearch, {\n    active: searchActive,\n    close: onSearchClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }))));\n};\n\nconst mapStateToProps = ({\n  theme\n}) => {\n  const {\n    navCollapsed,\n    navType,\n    headerNavColor,\n    mobileNav\n  } = theme;\n  return {\n    navCollapsed,\n    navType,\n    headerNavColor,\n    mobileNav\n  };\n};\n\nexport default connect(mapStateToProps, {\n  toggleCollapsedNav,\n  onMobileNavToggle\n})(HeaderNav);","map":{"version":3,"sources":["/home/vlad/github/react-emilus-boilerplate/src/components/layout-components/HeaderNav.tsx"],"names":["React","useState","connect","Menu","Layout","MenuFoldOutlined","MenuUnfoldOutlined","Logo","NavPanel","NavSearch","toggleCollapsedNav","onMobileNavToggle","NAV_TYPE_TOP","SIDE_NAV_COLLAPSED_WIDTH","SIDE_NAV_WIDTH","utils","NavProfile","Header","HeaderNav","props","navCollapsed","mobileNav","navType","headerNavColor","isMobile","searchActive","setSearchActive","onSearchClose","onToggle","isNavTop","mode","getColorContrast","getNavWidth","backgroundColor","width","mapStateToProps","theme"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Menu, Layout } from \"antd\";\nimport { MenuFoldOutlined, MenuUnfoldOutlined } from \"@ant-design/icons\";\nimport Logo from \"components/layout-components/Logo\";\nimport NavPanel from \"components/layout-components/NavPanel\";\nimport NavSearch from \"components/layout-components/NavSearch\";\nimport { toggleCollapsedNav, onMobileNavToggle } from \"redux/actions/Theme\";\nimport {\n  NAV_TYPE_TOP,\n  SIDE_NAV_COLLAPSED_WIDTH,\n  SIDE_NAV_WIDTH,\n} from \"constants/ThemeConstant\";\nimport utils from \"utils\";\nimport NavProfile from \"components/layout-components/NavProfile\";\nimport { ITheme } from \"redux/reducers/Theme\";\nimport { IState } from \"redux/reducers\";\n\nconst { Header } = Layout;\n\nconst HeaderNav = (props: any) => {\n  const {\n    navCollapsed,\n    mobileNav,\n    navType,\n    headerNavColor,\n    toggleCollapsedNav,\n    onMobileNavToggle,\n    isMobile,\n  } = props;\n  const [searchActive, setSearchActive] = useState(false);\n\n  const onSearchClose = () => {\n    setSearchActive(false);\n  };\n  const onToggle = () => {\n    if (!isMobile) {\n      toggleCollapsedNav(!navCollapsed);\n    } else {\n      onMobileNavToggle(!mobileNav);\n    }\n  };\n\n  const isNavTop = navType === NAV_TYPE_TOP;\n  const mode = utils.getColorContrast(headerNavColor);\n  const getNavWidth = () => {\n    if (isNavTop || isMobile) {\n      return \"0px\";\n    }\n    if (navCollapsed) {\n      return `${SIDE_NAV_COLLAPSED_WIDTH}px`;\n    } else {\n      return `${SIDE_NAV_WIDTH}px`;\n    }\n  };\n  return (\n    <Header\n      className={`app-header ${mode}`}\n      style={{ backgroundColor: headerNavColor }}\n    >\n      <div className={`app-header-wrapper ${isNavTop ? \"layout-top-nav\" : \"\"}`}>\n        <Logo logoType={mode} />\n        <div\n          className=\"nav\"\n          style={{\n            width: `calc(100% - ${getNavWidth()})`,\n          }}\n        >\n          <div className=\"nav-left\">\n            <Menu mode=\"horizontal\">\n              {isNavTop && !isMobile ? null : (\n                <Menu.Item\n                  key=\"0\"\n                  onClick={() => {\n                    onToggle();\n                  }}\n                >\n                  {navCollapsed || isMobile ? (\n                    <MenuUnfoldOutlined className=\"nav-icon\" />\n                  ) : (\n                    <MenuFoldOutlined className=\"nav-icon\" />\n                  )}\n                </Menu.Item>\n              )}\n            </Menu>\n          </div>\n          <div className=\"nav-right\">\n            <NavPanel />\n            <NavProfile />\n          </div>\n          <NavSearch active={searchActive} close={onSearchClose} />\n        </div>\n      </div>\n    </Header>\n  );\n};\n\nconst mapStateToProps = ({ theme }: IState) => {\n  const { navCollapsed, navType, headerNavColor, mobileNav } = theme as ITheme;\n  return {\n    navCollapsed,\n    navType,\n    headerNavColor,\n    mobileNav,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  toggleCollapsedNav,\n  onMobileNavToggle,\n})(HeaderNav);\n"]},"metadata":{},"sourceType":"module"}