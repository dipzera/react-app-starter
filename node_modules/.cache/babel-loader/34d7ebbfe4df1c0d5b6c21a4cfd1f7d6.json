{"ast":null,"code":"import { ToObject } from '../262';\n/**\n * https://tc39.es/ecma402/#sec-todatetimeoptions\n * @param options\n * @param required\n * @param defaults\n */\n\nexport function ToDateTimeOptions(options, required, defaults) {\n  if (options === undefined) {\n    options = null;\n  } else {\n    options = ToObject(options);\n  }\n\n  options = Object.create(options);\n  var needDefaults = true;\n\n  if (required === 'date' || required === 'any') {\n    for (var _i = 0, _a = ['weekday', 'year', 'month', 'day']; _i < _a.length; _i++) {\n      var prop = _a[_i];\n      var value = options[prop];\n\n      if (value !== undefined) {\n        needDefaults = false;\n      }\n    }\n  }\n\n  if (required === 'time' || required === 'any') {\n    for (var _b = 0, _c = ['hour', 'minute', 'second']; _b < _c.length; _b++) {\n      var prop = _c[_b];\n      var value = options[prop];\n\n      if (value !== undefined) {\n        needDefaults = false;\n      }\n    }\n  }\n\n  if (options.dateStyle !== undefined || options.timeStyle !== undefined) {\n    needDefaults = false;\n  }\n\n  if (required === 'date' && options.timeStyle) {\n    throw new TypeError('Intl.DateTimeFormat date was required but timeStyle was included');\n  }\n\n  if (required === 'time' && options.dateStyle) {\n    throw new TypeError('Intl.DateTimeFormat time was required but dateStyle was included');\n  }\n\n  if (needDefaults && (defaults === 'date' || defaults === 'all')) {\n    for (var _d = 0, _e = ['year', 'month', 'day']; _d < _e.length; _d++) {\n      var prop = _e[_d];\n      options[prop] = 'numeric';\n    }\n  }\n\n  if (needDefaults && (defaults === 'time' || defaults === 'all')) {\n    for (var _f = 0, _g = ['hour', 'minute', 'second']; _f < _g.length; _f++) {\n      var prop = _g[_f];\n      options[prop] = 'numeric';\n    }\n  }\n\n  return options;\n}","map":null,"metadata":{},"sourceType":"module"}