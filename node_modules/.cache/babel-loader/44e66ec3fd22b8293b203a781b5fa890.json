{"ast":null,"code":"import { message } from \"antd\";\nimport moment from \"moment\";\nimport { showAuthMessage } from \"redux/actions/Auth\";\nimport store from \"redux/store\";\n\nclass Utils {\n  static getNameInitial(name) {\n    let initials = name.match(/\\b\\w/g) || [];\n    return ((initials.shift() || \"\") + (initials.pop() || \"\")).toUpperCase();\n  }\n\n  static getRouteInfo(navTree, path) {\n    if (navTree.path === path) {\n      return navTree;\n    }\n\n    let route;\n\n    for (let p in navTree) {\n      if (navTree.hasOwnProperty(p) && typeof navTree[p] === \"object\") {\n        route = this.getRouteInfo(navTree[p], path);\n\n        if (route) {\n          return route;\n        }\n      }\n    }\n\n    return route;\n  }\n\n  static getColorContrast(hex) {\n    const threshold = 130;\n    const hRed = hexToR(hex);\n    const hGreen = hexToG(hex);\n    const hBlue = hexToB(hex);\n\n    function hexToR(h) {\n      return parseInt(cutHex(h).substring(0, 2), 16);\n    }\n\n    function hexToG(h) {\n      return parseInt(cutHex(h).substring(2, 4), 16);\n    }\n\n    function hexToB(h) {\n      return parseInt(cutHex(h).substring(4, 6), 16);\n    }\n\n    function cutHex(h) {\n      return h.charAt(0) === \"#\" ? h.substring(1, 7) : h;\n    }\n\n    const cBrightness = (hRed * 299 + hGreen * 587 + hBlue * 114) / 1000;\n\n    if (cBrightness > threshold) {\n      return \"dark\";\n    } else {\n      return \"light\";\n    }\n  }\n\n  static shadeColor(color, percent) {\n    let R = parseInt(color.substring(1, 3), 16);\n    let G = parseInt(color.substring(3, 5), 16);\n    let B = parseInt(color.substring(5, 7), 16);\n    R = parseInt(String(R * (100 + percent) / 100));\n    G = parseInt(String(G * (100 + percent) / 100));\n    B = parseInt(String(B * (100 + percent) / 100));\n    R = R < 255 ? R : 255;\n    G = G < 255 ? G : 255;\n    B = B < 255 ? B : 255;\n    const RR = R.toString(16).length === 1 ? `0${R.toString(16)}` : R.toString(16);\n    const GG = G.toString(16).length === 1 ? `0${G.toString(16)}` : G.toString(16);\n    const BB = B.toString(16).length === 1 ? `0${B.toString(16)}` : B.toString(16);\n    return `#${RR}${GG}${BB}`;\n  }\n\n  static getSignNum(number, positive, negative) {\n    if (number > 0) {\n      return positive;\n    }\n\n    if (number < 0) {\n      return negative;\n    }\n\n    return null;\n  }\n\n  static antdTableSorter(a, b, key) {\n    if (typeof a[key] === \"number\" && typeof b[key] === \"number\") {\n      return a[key] - b[key];\n    }\n\n    if (typeof a[key] === \"string\" && typeof b[key] === \"string\") {\n      a = a[key].toLowerCase();\n      b = b[key].toLowerCase();\n      return a > b ? -1 : b > a ? 1 : 0;\n    }\n\n    return;\n  }\n\n  static filterArray(list, key, value) {\n    let data = list;\n\n    if (list) {\n      data = list.filter(item => item[key] === value);\n    }\n\n    return data;\n  }\n\n  static deleteArrayRow(list, key, value) {\n    let data = list;\n\n    if (list) {\n      data = list.filter(item => item[key] !== value);\n    }\n\n    return data;\n  }\n\n  static wildCardSearch(list, input) {\n    list = list.filter(item => {\n      for (let key in item) {\n        if (item[key] == null || key === \"Photo\" || key === \"Logo\") {\n          continue;\n        }\n\n        if (item[key] //@ts-ignore\n        .toString().toUpperCase().indexOf(input.toString().toUpperCase()) !== -1) {\n          return true;\n        }\n      }\n    });\n    return list;\n  }\n\n  static getBreakPoint(screens) {\n    let breakpoints = [];\n\n    for (const key in screens) {\n      if (screens.hasOwnProperty(key)) {\n        const element = screens[key];\n\n        if (element) {\n          breakpoints.push(key);\n        }\n      }\n    }\n\n    return breakpoints;\n  }\n\n  static getBase64(img, callback) {\n    const reader = new FileReader();\n    reader.addEventListener(\"load\", () => callback(reader.result));\n    reader.readAsDataURL(img);\n  }\n\n  static beforeUpload(file) {\n    const isJpgOrPng = file.type === \"image/jpeg\" || file.type === \"image/png\";\n\n    if (!isJpgOrPng) {\n      message.error(\"You can only upload JPG/PNG file!\");\n    }\n\n    const isLt2M = file.size / 1024 / 1024 < 0.3;\n\n    if (!isLt2M) {\n      message.error(\"Image must be smaller than 300kb!\");\n    }\n\n    return isJpgOrPng && isLt2M;\n  }\n\n  static beforeUploadNumbers(file) {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsText(file);\n\n      reader.onload = event => {\n        const isCsvOrTxt = file.type === \"text/csv\" || file.type === \"text/plain\";\n\n        const hasLetters = () => {\n          if (isCsvOrTxt) {\n            return /[a-z]/gi.test(event.target.result);\n          }\n\n          return false;\n        };\n\n        if (hasLetters()) {\n          store.dispatch(showAuthMessage(\"The file should not contain letters!\"));\n        }\n\n        if (!isCsvOrTxt) {\n          store.dispatch(showAuthMessage(\"You can only upload CSV/TXT file!\"));\n        }\n\n        if (!hasLetters() && isCsvOrTxt) {\n          resolve(true);\n        } else {\n          reject();\n        }\n      };\n    });\n  }\n\n  static dummyRequest({\n    onSuccess\n  }) {\n    setTimeout(() => {\n      onSuccess(\"ok\");\n    });\n  }\n\n  static sortData(array, key) {\n    return array.slice().sort((a, b) => a[key] - b[key]);\n  }\n\n  static handleDotNetDate(date) {\n    return moment(date).format(\"[/Date(]xZZ[)/]\");\n  }\n\n  static fromDotNetDate(date) {\n    try {\n      return moment(new Date(parseInt(date.substr(6)))).format(\"DD-MM-YYYY\");\n    } catch {\n      return \"Unknown date\";\n    }\n  }\n\n  static toMilliSeconds(date) {\n    const newDate = new Date(date);\n    return newDate.getMilliseconds();\n  }\n\n  static parseToTicks(date) {\n    return date * 10000 + 621355968000000000;\n  }\n\n  static printElement(elem) {\n    var mywindow = window.open(\"\", \"PRINT\", \"height=600,width=800\");\n    mywindow.document.write(\"<html><head><title>\" + document.title + \"</title>\");\n    mywindow.document.write(\"</head><body >\");\n    mywindow.document.write(\"<h1>\" + document.title + \"</h1>\");\n    mywindow.document.write(document.querySelector(\".print-button\").innerHTML = \"\");\n    mywindow.document.write(document.querySelector(elem).innerHTML);\n    mywindow.document.write(\"</body></html>\");\n    mywindow.document.close(); // necessary for IE >= 10\n\n    mywindow.focus(); // necessary for IE >= 10*/\n\n    mywindow.print();\n    mywindow.close();\n  }\n\n  static printElementAlt(elem) {\n    document.querySelector(elem).style = \"padding: 100\";\n    var printContents = document.querySelector(elem).innerHTML;\n    var originalContents = document.body.innerHTML;\n    document.body.innerHTML = printContents;\n    window.print();\n    window.location.reload();\n  }\n\n  static padNumber(elem) {\n    // Add 0000 before numbers, ex. 00001, 00023, 01567\n    return (\"00000\" + elem).substring(elem.length);\n  }\n\n}\n\nexport default Utils;","map":{"version":3,"sources":["/home/vlad/github/react-emilus-boilerplate/src/utils/index.ts"],"names":["message","moment","showAuthMessage","store","Utils","getNameInitial","name","initials","match","shift","pop","toUpperCase","getRouteInfo","navTree","path","route","p","hasOwnProperty","getColorContrast","hex","threshold","hRed","hexToR","hGreen","hexToG","hBlue","hexToB","h","parseInt","cutHex","substring","charAt","cBrightness","shadeColor","color","percent","R","G","B","String","RR","toString","length","GG","BB","getSignNum","number","positive","negative","antdTableSorter","a","b","key","toLowerCase","filterArray","list","value","data","filter","item","deleteArrayRow","wildCardSearch","input","indexOf","getBreakPoint","screens","breakpoints","element","push","getBase64","img","callback","reader","FileReader","addEventListener","result","readAsDataURL","beforeUpload","file","isJpgOrPng","type","error","isLt2M","size","beforeUploadNumbers","Promise","resolve","reject","readAsText","onload","event","isCsvOrTxt","hasLetters","test","target","dispatch","dummyRequest","onSuccess","setTimeout","sortData","array","slice","sort","handleDotNetDate","date","format","fromDotNetDate","Date","substr","toMilliSeconds","newDate","getMilliseconds","parseToTicks","printElement","elem","mywindow","window","open","document","write","title","querySelector","innerHTML","close","focus","print","printElementAlt","style","printContents","originalContents","body","location","reload","padNumber"],"mappings":"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","sourcesContent":["import { message } from \"antd\";\nimport { RcFile } from \"antd/lib/upload\";\nimport moment from \"moment\";\nimport { showAuthMessage } from \"redux/actions/Auth\";\nimport store from \"redux/store\";\n\nclass Utils {\n  static getNameInitial(name: string) {\n    let initials = name.match(/\\b\\w/g) || [];\n    return ((initials.shift() || \"\") + (initials.pop() || \"\")).toUpperCase();\n  }\n\n  static getRouteInfo(navTree: any, path: any): any {\n    if (navTree.path === path) {\n      return navTree;\n    }\n    let route;\n    for (let p in navTree) {\n      if (navTree.hasOwnProperty(p) && typeof navTree[p] === \"object\") {\n        route = this.getRouteInfo(navTree[p], path);\n        if (route) {\n          return route;\n        }\n      }\n    }\n    return route;\n  }\n\n  static getColorContrast(hex: any) {\n    const threshold = 130;\n    const hRed = hexToR(hex);\n    const hGreen = hexToG(hex);\n    const hBlue = hexToB(hex);\n    function hexToR(h: any) {\n      return parseInt(cutHex(h).substring(0, 2), 16);\n    }\n    function hexToG(h: any) {\n      return parseInt(cutHex(h).substring(2, 4), 16);\n    }\n    function hexToB(h: any) {\n      return parseInt(cutHex(h).substring(4, 6), 16);\n    }\n    function cutHex(h: any) {\n      return h.charAt(0) === \"#\" ? h.substring(1, 7) : h;\n    }\n    const cBrightness = (hRed * 299 + hGreen * 587 + hBlue * 114) / 1000;\n    if (cBrightness > threshold) {\n      return \"dark\";\n    } else {\n      return \"light\";\n    }\n  }\n\n  static shadeColor(color: any, percent: any) {\n    let R = parseInt(color.substring(1, 3), 16);\n    let G = parseInt(color.substring(3, 5), 16);\n    let B = parseInt(color.substring(5, 7), 16);\n    R = parseInt(String((R * (100 + percent)) / 100));\n    G = parseInt(String((G * (100 + percent)) / 100));\n    B = parseInt(String((B * (100 + percent)) / 100));\n    R = R < 255 ? R : 255;\n    G = G < 255 ? G : 255;\n    B = B < 255 ? B : 255;\n    const RR =\n      R.toString(16).length === 1 ? `0${R.toString(16)}` : R.toString(16);\n    const GG =\n      G.toString(16).length === 1 ? `0${G.toString(16)}` : G.toString(16);\n    const BB =\n      B.toString(16).length === 1 ? `0${B.toString(16)}` : B.toString(16);\n    return `#${RR}${GG}${BB}`;\n  }\n\n  static getSignNum(number: number, positive: any, negative: any) {\n    if (number > 0) {\n      return positive;\n    }\n    if (number < 0) {\n      return negative;\n    }\n    return null;\n  }\n\n  static antdTableSorter(a: any, b: any, key: any) {\n    if (typeof a[key] === \"number\" && typeof b[key] === \"number\") {\n      return a[key] - b[key];\n    }\n\n    if (typeof a[key] === \"string\" && typeof b[key] === \"string\") {\n      a = a[key].toLowerCase();\n      b = b[key].toLowerCase();\n      return a > b ? -1 : b > a ? 1 : 0;\n    }\n    return;\n  }\n\n  static filterArray(list: any, key: any, value: any) {\n    let data = list;\n    if (list) {\n      data = list.filter((item: any) => item[key] === value);\n    }\n    return data;\n  }\n  static deleteArrayRow<T>(list: T[], key: keyof T, value: any) {\n    let data = list;\n    if (list) {\n      data = list.filter((item) => item[key] !== value);\n    }\n    return data;\n  }\n\n  static wildCardSearch<T>(list: T[], input: string) {\n    list = list.filter((item) => {\n      for (let key in item) {\n        if (item[key] == null || key === \"Photo\" || key === \"Logo\") {\n          continue;\n        }\n        if (\n          item[key]\n            //@ts-ignore\n            .toString()\n            .toUpperCase()\n            .indexOf(input.toString().toUpperCase()) !== -1\n        ) {\n          return true;\n        }\n      }\n    });\n    return list;\n  }\n\n  static getBreakPoint(screens: any) {\n    let breakpoints: any[] = [];\n    for (const key in screens) {\n      if (screens.hasOwnProperty(key)) {\n        const element = screens[key];\n        if (element) {\n          breakpoints.push(key);\n        }\n      }\n    }\n    return breakpoints;\n  }\n\n  static getBase64(img: any, callback: any) {\n    const reader = new FileReader();\n    reader.addEventListener(\"load\", () => callback(reader.result));\n    reader.readAsDataURL(img);\n  }\n\n  static beforeUpload(file: any) {\n    const isJpgOrPng = file.type === \"image/jpeg\" || file.type === \"image/png\";\n    if (!isJpgOrPng) {\n      message.error(\"You can only upload JPG/PNG file!\");\n    }\n    const isLt2M = file.size / 1024 / 1024 < 0.3;\n\n    if (!isLt2M) {\n      message.error(\"Image must be smaller than 300kb!\");\n    }\n    return isJpgOrPng && isLt2M;\n  }\n\n  static beforeUploadNumbers(file: RcFile): Promise<boolean> {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsText(file);\n      reader.onload = (event: ProgressEvent<FileReader>) => {\n        const isCsvOrTxt =\n          file.type === \"text/csv\" || file.type === \"text/plain\";\n        const hasLetters = (): boolean => {\n          if (isCsvOrTxt) {\n            return /[a-z]/gi.test(event!.target!.result! as string);\n          }\n          return false;\n        };\n        if (hasLetters()) {\n          store.dispatch(\n            showAuthMessage(\"The file should not contain letters!\")\n          );\n        }\n        if (!isCsvOrTxt) {\n          store.dispatch(showAuthMessage(\"You can only upload CSV/TXT file!\"));\n        }\n        if (!hasLetters() && isCsvOrTxt) {\n          resolve(true);\n        } else {\n          reject();\n        }\n      };\n    });\n  }\n\n  static dummyRequest({ onSuccess }: any) {\n    setTimeout(() => {\n      onSuccess(\"ok\");\n    });\n  }\n\n  static sortData(array: any, key: any) {\n    return array.slice().sort((a: any, b: any) => a[key] - b[key]);\n  }\n\n  static handleDotNetDate(date: any) {\n    return moment(date).format(\"[/Date(]xZZ[)/]\");\n  }\n\n  static fromDotNetDate(date: any) {\n    try {\n      return moment(new Date(parseInt(date.substr(6)))).format(\"DD-MM-YYYY\");\n    } catch {\n      return \"Unknown date\";\n    }\n  }\n\n  static toMilliSeconds(date: string) {\n    const newDate = new Date(date);\n    return newDate.getMilliseconds();\n  }\n  static parseToTicks(date: number): number {\n    return date * 10000 + 621355968000000000;\n  }\n\n  static printElement(elem: any) {\n    var mywindow = window.open(\"\", \"PRINT\", \"height=600,width=800\");\n\n    mywindow!.document.write(\n      \"<html><head><title>\" + document.title + \"</title>\"\n    );\n    mywindow!.document.write(\"</head><body >\");\n    mywindow!.document.write(\"<h1>\" + document.title + \"</h1>\");\n    mywindow!.document.write(\n      (document.querySelector(\".print-button\")!.innerHTML = \"\")\n    );\n    mywindow!.document.write(document.querySelector(elem).innerHTML);\n    mywindow!.document.write(\"</body></html>\");\n\n    mywindow!.document.close(); // necessary for IE >= 10\n    mywindow!.focus(); // necessary for IE >= 10*/\n\n    mywindow!.print();\n    mywindow!.close();\n  }\n\n  static printElementAlt(elem: any) {\n    document.querySelector(elem).style = \"padding: 100\";\n    var printContents = document.querySelector(elem).innerHTML;\n    var originalContents = document.body.innerHTML;\n\n    document.body.innerHTML = printContents;\n\n    window.print();\n\n    window.location.reload();\n  }\n\n  static padNumber(elem: any) {\n    // Add 0000 before numbers, ex. 00001, 00023, 01567\n    return (\"00000\" + elem).substring(elem.length);\n  }\n}\n\nexport default Utils;\n"]},"metadata":{},"sourceType":"module"}