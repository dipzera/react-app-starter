{"ast":null,"code":"var _jsxFileName = \"/home/vlad/github/react-emilus-boilerplate/src/views/auth-views/components/RegisterForm.tsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { LockOutlined, MailOutlined, WarningOutlined } from \"@ant-design/icons\";\nimport { Button, Form, Input, Alert, Tooltip, Select } from \"antd\";\nimport { showAuthMessage, showLoading, hideAuthMessage, hideLoading } from \"../../../redux/actions/Auth\";\nimport { motion } from \"framer-motion\";\nimport IntlMessage from \"components/util-components/IntlMessage\";\nconst rules = {\n  email: [{\n    required: true,\n    message: /*#__PURE__*/React.createElement(IntlMessage, {\n      id: \"auth.MessageInsertEmail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 16\n      }\n    })\n  }, {\n    type: \"email\",\n    message: /*#__PURE__*/React.createElement(IntlMessage, {\n      id: \"auth.MessageInsertValidEmail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 16\n      }\n    })\n  }],\n  password: [{\n    required: true,\n    message: /*#__PURE__*/React.createElement(IntlMessage, {\n      id: \"auth.MessageInsertPassword\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 16\n      }\n    })\n  }, {\n    required: true,\n    pattern: /^(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])(?=.*[!@#$%^&*()_+,.\\\\\\/;':\"-]).{8,}$/,\n    message: /*#__PURE__*/React.createElement(IntlMessage, {\n      id: \"auth.PasswordValidation\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 16\n      }\n    })\n  }],\n  confirm: [{\n    required: true,\n    message: /*#__PURE__*/React.createElement(IntlMessage, {\n      id: \"auth.MessageInsertConfirmPassword\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 16\n      }\n    })\n  }, ({\n    getFieldValue\n  }) => ({\n    validator(rule, value) {\n      if (!value || getFieldValue(\"password\") === value) {\n        return Promise.resolve();\n      }\n\n      return Promise.reject( /*#__PURE__*/React.createElement(IntlMessage, {\n        id: \"auth.MessagePasswordsMatch\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }\n      }));\n    }\n\n  })]\n};\nexport const RegisterForm = props => {\n  const {\n    showLoading,\n    loading,\n    showMessage,\n    hideAuthMessage,\n    hideLoading,\n    locale,\n    history\n  } = props;\n  const [form] = Form.useForm();\n  const [isCapsLock, setIsCapsLock] = useState(false);\n  const [isVATPayer, setIsVATPayer] = useState(false);\n\n  const onSignUp = () => {\n    form.validateFields().then(values => {// Do something\n    }).catch(info => {\n      console.log(\"Validate Failed:\", info);\n    });\n  };\n\n  useEffect(() => {\n    if (showMessage) {\n      setTimeout(() => {\n        hideAuthMessage();\n      }, 3000);\n    }\n  }, [showMessage]);\n  const {\n    Option\n  } = Select;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(motion.div, {\n    initial: {\n      opacity: 0,\n      marginBottom: 0\n    },\n    animate: {\n      opacity: showMessage ? 1 : 0,\n      marginBottom: showMessage ? 20 : 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    type: \"error\",\n    showIcon: true,\n    message: props.message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Form, {\n    form: form,\n    layout: \"vertical\",\n    name: \"register-form\",\n    onFinish: onSignUp,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"email\",\n    label: /*#__PURE__*/React.createElement(IntlMessage, {\n      id: \"auth.Email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 18\n      }\n    }),\n    rules: rules.email,\n    hasFeedback: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    prefix: /*#__PURE__*/React.createElement(MailOutlined, {\n      className: \"text-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 26\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"password\",\n    label: /*#__PURE__*/React.createElement(IntlMessage, {\n      id: \"auth.Password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 18\n      }\n    }),\n    rules: rules.password,\n    hasFeedback: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input.Password, {\n    mode: \"multiple\",\n    prefix: [/*#__PURE__*/React.createElement(LockOutlined, {\n      className: \"text-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }\n    }), isCapsLock && /*#__PURE__*/React.createElement(Tooltip, {\n      title: \"CapsLock is on\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(WarningOutlined, {\n      className: \"text-danger ml-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 21\n      }\n    }))],\n    type: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"confirm\",\n    label: /*#__PURE__*/React.createElement(IntlMessage, {\n      id: \"auth.ConfirmPassword\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 18\n      }\n    }),\n    rules: rules.confirm,\n    hasFeedback: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    prefix: [/*#__PURE__*/React.createElement(LockOutlined, {\n      className: \"text-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }\n    }), isCapsLock && /*#__PURE__*/React.createElement(Tooltip, {\n      title: \"CapsLock is on\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(WarningOutlined, {\n      className: \"text-danger ml-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 21\n      }\n    }))],\n    type: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    block: true,\n    loading: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 11\n    }\n  }, \" \", /*#__PURE__*/React.createElement(IntlMessage, {\n    id: \"auth.SignUp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 14\n    }\n  })))));\n};\n\nconst mapStateToProps = ({\n  auth,\n  theme\n}) => {\n  const {\n    loading,\n    message,\n    showMessage\n  } = auth;\n  const {\n    locale\n  } = theme;\n  return {\n    loading,\n    message,\n    showMessage,\n    locale\n  };\n};\n\nconst mapDispatchToProps = {\n  showAuthMessage,\n  hideAuthMessage,\n  showLoading,\n  hideLoading\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(RegisterForm);","map":{"version":3,"sources":["/home/vlad/github/react-emilus-boilerplate/src/views/auth-views/components/RegisterForm.tsx"],"names":["React","useEffect","useState","connect","LockOutlined","MailOutlined","WarningOutlined","Button","Form","Input","Alert","Tooltip","Select","showAuthMessage","showLoading","hideAuthMessage","hideLoading","motion","IntlMessage","rules","email","required","message","type","password","pattern","confirm","getFieldValue","validator","rule","value","Promise","resolve","reject","RegisterForm","props","loading","showMessage","locale","history","form","useForm","isCapsLock","setIsCapsLock","isVATPayer","setIsVATPayer","onSignUp","validateFields","then","values","catch","info","console","log","setTimeout","Option","opacity","marginBottom","mode","prefix","mapStateToProps","auth","theme","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { LockOutlined, MailOutlined, WarningOutlined } from \"@ant-design/icons\";\nimport { Button, Form, Input, Alert, Tooltip, Radio, Select } from \"antd\";\nimport {\n  showAuthMessage,\n  showLoading,\n  hideAuthMessage,\n  hideLoading,\n} from \"../../../redux/actions/Auth\";\nimport { motion } from \"framer-motion\";\nimport IntlMessage from \"components/util-components/IntlMessage\";\nimport { IState } from \"redux/reducers\";\nimport { IAuth } from \"redux/reducers/Auth\";\nimport { ITheme } from \"redux/reducers/Theme\";\nimport { RouteComponentProps } from \"react-router-dom\";\n\nconst rules = {\n  email: [\n    {\n      required: true,\n      message: <IntlMessage id={\"auth.MessageInsertEmail\"} />,\n    },\n    {\n      type: \"email\",\n      message: <IntlMessage id={\"auth.MessageInsertValidEmail\"} />,\n    },\n  ],\n  password: [\n    {\n      required: true,\n      message: <IntlMessage id={\"auth.MessageInsertPassword\"} />,\n    },\n    {\n      required: true,\n      pattern: /^(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])(?=.*[!@#$%^&*()_+,.\\\\\\/;':\"-]).{8,}$/,\n      message: <IntlMessage id={\"auth.PasswordValidation\"} />,\n    },\n  ],\n  confirm: [\n    {\n      required: true,\n      message: <IntlMessage id={\"auth.MessageInsertConfirmPassword\"} />,\n    },\n    ({ getFieldValue }: any) => ({\n      validator(rule: any, value: any) {\n        if (!value || getFieldValue(\"password\") === value) {\n          return Promise.resolve();\n        }\n        return Promise.reject(\n          <IntlMessage id={\"auth.MessagePasswordsMatch\"} />\n        );\n      },\n    }),\n  ],\n} as { [key: string]: any };\n\ninterface IRegisterFormProps extends ITheme, RouteComponentProps, IAuth {\n  showLoading: () => void;\n  hideAuthMessage: () => void;\n  hideLoading: () => void;\n}\nexport const RegisterForm = (props: IRegisterFormProps) => {\n  const {\n    showLoading,\n    loading,\n    showMessage,\n    hideAuthMessage,\n    hideLoading,\n    locale,\n    history,\n  } = props;\n  const [form] = Form.useForm();\n\n  const [isCapsLock, setIsCapsLock] = useState<boolean>(false);\n  const [isVATPayer, setIsVATPayer] = useState<boolean>(false);\n\n  const onSignUp = () => {\n    form\n      .validateFields()\n      .then((values) => {\n        // Do something\n      })\n      .catch((info) => {\n        console.log(\"Validate Failed:\", info);\n      });\n  };\n\n  useEffect(() => {\n    if (showMessage) {\n      setTimeout(() => {\n        hideAuthMessage();\n      }, 3000);\n    }\n  }, [showMessage]);\n\n  const { Option } = Select;\n\n  return (\n    <>\n      <motion.div\n        initial={{ opacity: 0, marginBottom: 0 }}\n        animate={{\n          opacity: showMessage ? 1 : 0,\n          marginBottom: showMessage ? 20 : 0,\n        }}\n      >\n        <Alert type=\"error\" showIcon message={props.message} />\n      </motion.div>\n      <Form\n        form={form}\n        layout=\"vertical\"\n        name=\"register-form\"\n        onFinish={onSignUp}\n      >\n        <Form.Item\n          name=\"email\"\n          label={<IntlMessage id={\"auth.Email\"} />}\n          rules={rules.email}\n          hasFeedback\n        >\n          <Input prefix={<MailOutlined className={\"text-primary\"} />} />\n        </Form.Item>\n        <Form.Item\n          name=\"password\"\n          label={<IntlMessage id={\"auth.Password\"} />}\n          rules={rules.password}\n          hasFeedback\n        >\n          <Input.Password\n            {...{\n              mode: \"multiple\",\n              prefix: [\n                <LockOutlined className={\"text-primary\"} />,\n                isCapsLock && (\n                  <Tooltip title={\"CapsLock is on\"}>\n                    <WarningOutlined className={\"text-danger ml-1\"} />\n                  </Tooltip>\n                ),\n              ],\n              type: \"password\",\n            }}\n          />\n        </Form.Item>\n        <Form.Item\n          name=\"confirm\"\n          label={<IntlMessage id={\"auth.ConfirmPassword\"} />}\n          rules={rules.confirm}\n          hasFeedback\n        >\n          <Input\n            {...{\n              prefix: [\n                <LockOutlined className={\"text-primary\"} />,\n                isCapsLock && (\n                  <Tooltip title={\"CapsLock is on\"}>\n                    <WarningOutlined className={\"text-danger ml-1\"} />\n                  </Tooltip>\n                ),\n              ],\n              type: \"password\",\n            }}\n          />\n        </Form.Item>\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\" block loading={loading}>\n            {\" \"}\n            {<IntlMessage id={\"auth.SignUp\"} />}\n          </Button>\n        </Form.Item>\n      </Form>\n    </>\n  );\n};\n\nconst mapStateToProps = ({ auth, theme }: IState) => {\n  const { loading, message, showMessage } = auth as IAuth;\n  const { locale } = theme as ITheme;\n  return { loading, message, showMessage, locale };\n};\n\nconst mapDispatchToProps = {\n  showAuthMessage,\n  hideAuthMessage,\n  showLoading,\n  hideLoading,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RegisterForm);\n"]},"metadata":{},"sourceType":"module"}