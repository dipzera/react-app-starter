{"ast":null,"code":"import { applyMiddleware, compose, createStore } from \"redux\";\nimport reducers from \"../reducers\";\nimport { loadState, saveState } from \"../../utils/localStorage\";\nimport throttle from \"lodash/throttle\";\nimport thunk from \"redux-thunk\";\n\nfunction configureStore(preLoadedState) {\n  // const composeEnhancers =\n  //   window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  return createStore(reducers, preLoadedState, compose(applyMiddleware(thunk)));\n}\n\nconst store = configureStore(loadState());\nstore.subscribe(throttle(() => saveState(store.getState()), 1000));\nexport default store;","map":{"version":3,"sources":["/home/vlad/github/react-emilus-boilerplate/src/redux/store/index.ts"],"names":["applyMiddleware","compose","createStore","reducers","loadState","saveState","throttle","thunk","configureStore","preLoadedState","store","subscribe","getState"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,OAA1B,EAAmCC,WAAnC,QAAsD,OAAtD;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,SAASC,SAAT,EAAoBC,SAApB,QAAqC,0BAArC;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAOC,KAAP,MAAkB,aAAlB;;AAYA,SAASC,cAAT,CAAwBC,cAAxB,EAAgD;AAC9C;AACA;AACA,SAAOP,WAAW,CAACC,QAAD,EAAWM,cAAX,EAA2BR,OAAO,CAACD,eAAe,CAACO,KAAD,CAAhB,CAAlC,CAAlB;AACD;;AAED,MAAMG,KAAK,GAAGF,cAAc,CAACJ,SAAS,EAAV,CAA5B;AAEAM,KAAK,CAACC,SAAN,CAAgBL,QAAQ,CAAC,MAAMD,SAAS,CAACK,KAAK,CAACE,QAAN,EAAD,CAAhB,EAAoC,IAApC,CAAxB;AAEA,eAAeF,KAAf","sourcesContent":["import { applyMiddleware, compose, createStore } from \"redux\";\nimport reducers from \"../reducers\";\nimport { loadState, saveState } from \"../../utils/localStorage\";\nimport throttle from \"lodash/throttle\";\nimport thunk from \"redux-thunk\";\n\ninterface IState {\n  [key: string]: any;\n}\n\ndeclare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n  }\n}\n\nfunction configureStore(preLoadedState: IState) {\n  // const composeEnhancers =\n  //   window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  return createStore(reducers, preLoadedState, compose(applyMiddleware(thunk)));\n}\n\nconst store = configureStore(loadState());\n\nstore.subscribe(throttle(() => saveState(store.getState()), 1000));\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}