{"ast":null,"code":"// Pass in Redux store's state to save it to the user's browser local storage\nexport const saveState = state => {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem(`state`, serializedState);\n  } catch {// We'll just ignore the errors\n  }\n};\n/* Loads the state and returns an object that can be provided as the\n *  preloadedState parameter of store.js's call to configureStore */\n\nexport const loadState = () => {\n  try {\n    const serializedState = localStorage.getItem(`state`);\n\n    if (serializedState === null) {\n      return undefined;\n    }\n\n    return JSON.parse(serializedState);\n  } catch {\n    return undefined;\n  }\n};","map":{"version":3,"sources":["/home/vlad/github/react-emilus-boilerplate/src/utils/localStorage.ts"],"names":["saveState","state","serializedState","JSON","stringify","localStorage","setItem","loadState","getItem","undefined","parse"],"mappings":"AAEA;AACA,OAAO,MAAMA,SAAS,GAAIC,KAAD,IAAmB;AAC1C,MAAI;AACF,UAAMC,eAAe,GAAGC,IAAI,CAACC,SAAL,CAAeH,KAAf,CAAxB;AACAI,IAAAA,YAAY,CAACC,OAAb,CAAsB,OAAtB,EAA8BJ,eAA9B;AACD,GAHD,CAGE,MAAM,CACN;AACD;AACF,CAPM;AAQP;AACA;;AACA,OAAO,MAAMK,SAAS,GAAG,MAAM;AAC7B,MAAI;AACF,UAAML,eAAe,GAAGG,YAAY,CAACG,OAAb,CAAsB,OAAtB,CAAxB;;AACA,QAAIN,eAAe,KAAK,IAAxB,EAA8B;AAC5B,aAAOO,SAAP;AACD;;AACD,WAAON,IAAI,CAACO,KAAL,CAAWR,eAAX,CAAP;AACD,GAND,CAME,MAAM;AACN,WAAOO,SAAP;AACD;AACF,CAVM","sourcesContent":["import { IState } from \"redux/reducers\";\n\n// Pass in Redux store's state to save it to the user's browser local storage\nexport const saveState = (state: IState) => {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem(`state`, serializedState);\n  } catch {\n    // We'll just ignore the errors\n  }\n};\n/* Loads the state and returns an object that can be provided as the\n *  preloadedState parameter of store.js's call to configureStore */\nexport const loadState = () => {\n  try {\n    const serializedState = localStorage.getItem(`state`);\n    if (serializedState === null) {\n      return undefined;\n    }\n    return JSON.parse(serializedState);\n  } catch {\n    return undefined;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}