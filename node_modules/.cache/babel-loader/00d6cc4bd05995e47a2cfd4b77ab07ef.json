{"ast":null,"code":"var _jsxFileName = \"/home/vlad/github/react-emilus-boilerplate/src/components/layout-components/MenuContent.tsx\";\nimport * as React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Menu, Grid } from \"antd\";\nimport IntlMessage from \"components/util-components/IntlMessage\";\nimport Icon from \"components/util-components/Icon\";\nimport navigationConfig from \"configs/NavigationConfig\";\nimport { connect } from \"react-redux\";\nimport { SIDE_NAV_LIGHT, NAV_TYPE_SIDE } from \"constants/ThemeConstant\";\nimport utils from \"utils\";\nimport { onMobileNavToggle } from \"redux/actions/Theme\";\nconst {\n  SubMenu\n} = Menu;\nconst {\n  useBreakpoint\n} = Grid;\n\nconst setLocale = (isLocaleOn, localeKey) => isLocaleOn ? /*#__PURE__*/React.createElement(IntlMessage, {\n  id: localeKey,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 16\n  }\n}) : localeKey.toString();\n\nconst setDefaultOpen = key => {\n  let keyList = [];\n  let keyString = \"\";\n\n  if (key) {\n    const arr = key.split(\"-\");\n\n    for (let index = 0; index < arr.length; index++) {\n      const elm = arr[index];\n      index === 0 ? keyString = elm : keyString = `${keyString}-${elm}`;\n      keyList.push(keyString);\n    }\n  }\n\n  return keyList;\n};\n\nconst SideNavContent = props => {\n  const {\n    sideNavTheme,\n    routeInfo,\n    hideGroupTitle,\n    localization,\n    onMobileNavToggle\n  } = props;\n  const isMobile = !utils.getBreakPoint(useBreakpoint()).includes(\"lg\");\n\n  const closeMobileNav = () => {\n    if (isMobile) {\n      onMobileNavToggle(false);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Menu, {\n    theme: sideNavTheme === SIDE_NAV_LIGHT ? \"light\" : \"dark\",\n    mode: \"inline\",\n    style: {\n      height: \"100%\",\n      borderRight: 0\n    },\n    defaultSelectedKeys: [routeInfo === null || routeInfo === void 0 ? void 0 : routeInfo.key],\n    defaultOpenKeys: setDefaultOpen(routeInfo === null || routeInfo === void 0 ? void 0 : routeInfo.key),\n    className: hideGroupTitle ? \"hide-group-title\" : \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, navigationConfig.map(menu => menu.submenu.length > 0 ? /*#__PURE__*/React.createElement(Menu.ItemGroup, {\n    key: menu.key,\n    title: setLocale(localization, menu.title),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, menu.submenu.map(subMenuFirst => subMenuFirst.submenu.length > 0 ? /*#__PURE__*/React.createElement(SubMenu, {\n    icon: subMenuFirst.icon ? /*#__PURE__*/React.createElement(Icon, {\n      type: subMenuFirst === null || subMenuFirst === void 0 ? void 0 : subMenuFirst.icon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 23\n      }\n    }) : null,\n    key: subMenuFirst.key,\n    title: setLocale(localization, subMenuFirst.title),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, subMenuFirst.submenu.map(subMenuSecond => /*#__PURE__*/React.createElement(Menu.Item, {\n    key: subMenuSecond[\"key\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  }, subMenuSecond[\"icon\"] ? /*#__PURE__*/React.createElement(Icon, {\n    type: subMenuSecond[\"icon\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 25\n    }\n  }) : null, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 23\n    }\n  }, setLocale(localization, subMenuSecond[\"icon\"])), /*#__PURE__*/React.createElement(Link, {\n    onClick: () => closeMobileNav(),\n    to: subMenuSecond[\"path\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 23\n    }\n  })))) : /*#__PURE__*/React.createElement(Menu.Item, {\n    key: subMenuFirst.key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }, subMenuFirst.icon ? /*#__PURE__*/React.createElement(Icon, {\n    type: subMenuFirst.icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 40\n    }\n  }) : null, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 19\n    }\n  }, setLocale(localization, subMenuFirst.title)), /*#__PURE__*/React.createElement(Link, {\n    onClick: () => closeMobileNav(),\n    to: subMenuFirst.path,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 19\n    }\n  })))) : /*#__PURE__*/React.createElement(Menu.Item, {\n    key: menu.key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, menu.icon ? /*#__PURE__*/React.createElement(Icon, {\n    type: menu === null || menu === void 0 ? void 0 : menu.icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 26\n    }\n  }) : null, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, setLocale(localization, menu === null || menu === void 0 ? void 0 : menu.title)), menu.path ? /*#__PURE__*/React.createElement(Link, {\n    onClick: () => closeMobileNav(),\n    to: menu.path,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 15\n    }\n  }) : null)));\n};\n\nconst TopNavContent = props => {\n  const {\n    topNavColor,\n    localization\n  } = props;\n  return /*#__PURE__*/React.createElement(Menu, {\n    mode: \"horizontal\",\n    style: {\n      backgroundColor: topNavColor\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 5\n    }\n  }, navigationConfig.map(menu => menu.submenu.length > 0 ? /*#__PURE__*/React.createElement(SubMenu, {\n    key: menu.key,\n    popupClassName: \"top-nav-menu\",\n    title: /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 15\n      }\n    }, menu.icon ? /*#__PURE__*/React.createElement(Icon, {\n      type: menu === null || menu === void 0 ? void 0 : menu.icon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 30\n      }\n    }) : null, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }\n    }, setLocale(localization, menu.title))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }, menu.submenu.map(subMenuFirst => subMenuFirst.submenu.length > 0 ? /*#__PURE__*/React.createElement(SubMenu, {\n    key: subMenuFirst.key,\n    icon: subMenuFirst.icon ? /*#__PURE__*/React.createElement(Icon, {\n      type: subMenuFirst === null || subMenuFirst === void 0 ? void 0 : subMenuFirst.icon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 23\n      }\n    }) : null,\n    title: setLocale(localization, subMenuFirst.title),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }\n  }, subMenuFirst.submenu.map(subMenuSecond => /*#__PURE__*/React.createElement(Menu.Item, {\n    key: subMenuSecond[\"key\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 23\n    }\n  }, setLocale(localization, subMenuSecond[\"title\"])), /*#__PURE__*/React.createElement(Link, {\n    to: subMenuSecond[\"path\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 23\n    }\n  })))) : /*#__PURE__*/React.createElement(Menu.Item, {\n    key: subMenuFirst.key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 17\n    }\n  }, subMenuFirst.icon ? /*#__PURE__*/React.createElement(Icon, {\n    type: subMenuFirst === null || subMenuFirst === void 0 ? void 0 : subMenuFirst.icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 21\n    }\n  }) : null, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 19\n    }\n  }, setLocale(localization, subMenuFirst.title)), /*#__PURE__*/React.createElement(Link, {\n    to: subMenuFirst.path,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 19\n    }\n  })))) : /*#__PURE__*/React.createElement(Menu.Item, {\n    key: menu.key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 11\n    }\n  }, menu.icon ? /*#__PURE__*/React.createElement(Icon, {\n    type: menu === null || menu === void 0 ? void 0 : menu.icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 26\n    }\n  }) : null, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }\n  }, setLocale(localization, menu === null || menu === void 0 ? void 0 : menu.title)), menu.path ? /*#__PURE__*/React.createElement(Link, {\n    to: menu.path,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 26\n    }\n  }) : null)));\n};\n\nconst MenuContent = props => {\n  return props.type === NAV_TYPE_SIDE ? /*#__PURE__*/React.createElement(SideNavContent, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 5\n    }\n  })) : /*#__PURE__*/React.createElement(TopNavContent, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 5\n    }\n  }));\n};\n\nconst mapStateToProps = ({\n  theme\n}) => {\n  const {\n    sideNavTheme,\n    topNavColor\n  } = theme;\n  return {\n    sideNavTheme,\n    topNavColor\n  };\n};\n\nexport default connect(mapStateToProps, {\n  onMobileNavToggle\n})(MenuContent);","map":{"version":3,"sources":["/home/vlad/github/react-emilus-boilerplate/src/components/layout-components/MenuContent.tsx"],"names":["React","Link","Menu","Grid","IntlMessage","Icon","navigationConfig","connect","SIDE_NAV_LIGHT","NAV_TYPE_SIDE","utils","onMobileNavToggle","SubMenu","useBreakpoint","setLocale","isLocaleOn","localeKey","toString","setDefaultOpen","key","keyList","keyString","arr","split","index","length","elm","push","SideNavContent","props","sideNavTheme","routeInfo","hideGroupTitle","localization","isMobile","getBreakPoint","includes","closeMobileNav","height","borderRight","map","menu","submenu","title","subMenuFirst","icon","subMenuSecond","path","TopNavContent","topNavColor","backgroundColor","MenuContent","type","mapStateToProps","theme"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Menu, Grid } from \"antd\";\nimport IntlMessage from \"components/util-components/IntlMessage\";\nimport Icon from \"components/util-components/Icon\";\nimport navigationConfig from \"configs/NavigationConfig\";\nimport { connect } from \"react-redux\";\nimport { SIDE_NAV_LIGHT, NAV_TYPE_SIDE } from \"constants/ThemeConstant\";\nimport utils from \"utils\";\nimport { onMobileNavToggle } from \"redux/actions/Theme\";\nimport { ITheme } from \"redux/reducers/Theme\";\nimport { IState } from \"redux/reducers\";\n\nconst { SubMenu } = Menu;\nconst { useBreakpoint } = Grid;\n\nconst setLocale = (isLocaleOn: boolean, localeKey: string | number) =>\n  isLocaleOn ? <IntlMessage id={localeKey} /> : localeKey.toString();\n\nconst setDefaultOpen = (key: any) => {\n  let keyList: any[] = [];\n  let keyString = \"\";\n  if (key) {\n    const arr = key.split(\"-\");\n    for (let index = 0; index < arr.length; index++) {\n      const elm = arr[index];\n      index === 0 ? (keyString = elm) : (keyString = `${keyString}-${elm}`);\n      keyList.push(keyString);\n    }\n  }\n  return keyList;\n};\n\nconst SideNavContent = (props: any) => {\n  const {\n    sideNavTheme,\n    routeInfo,\n    hideGroupTitle,\n    localization,\n    onMobileNavToggle,\n  } = props;\n  const isMobile = !utils.getBreakPoint(useBreakpoint()).includes(\"lg\");\n  const closeMobileNav = () => {\n    if (isMobile) {\n      onMobileNavToggle(false);\n    }\n  };\n  return (\n    <Menu\n      theme={sideNavTheme === SIDE_NAV_LIGHT ? \"light\" : \"dark\"}\n      mode=\"inline\"\n      style={{ height: \"100%\", borderRight: 0 }}\n      defaultSelectedKeys={[routeInfo?.key]}\n      defaultOpenKeys={setDefaultOpen(routeInfo?.key)}\n      className={hideGroupTitle ? \"hide-group-title\" : \"\"}\n    >\n      {navigationConfig.map((menu) =>\n        menu.submenu.length > 0 ? (\n          <Menu.ItemGroup\n            key={menu.key}\n            title={setLocale(localization, menu.title)}\n          >\n            {menu.submenu.map((subMenuFirst) =>\n              subMenuFirst.submenu.length > 0 ? (\n                <SubMenu\n                  icon={\n                    subMenuFirst.icon ? (\n                      <Icon type={subMenuFirst?.icon} />\n                    ) : null\n                  }\n                  key={subMenuFirst.key}\n                  title={setLocale(localization, subMenuFirst.title)}\n                >\n                  {subMenuFirst.submenu.map((subMenuSecond) => (\n                    <Menu.Item key={subMenuSecond[\"key\"]}>\n                      {subMenuSecond[\"icon\"] ? (\n                        <Icon type={subMenuSecond[\"icon\"]} />\n                      ) : null}\n                      <span>\n                        {setLocale(localization, subMenuSecond[\"icon\"])}\n                      </span>\n                      <Link\n                        onClick={() => closeMobileNav()}\n                        to={subMenuSecond[\"path\"]}\n                      />\n                    </Menu.Item>\n                  ))}\n                </SubMenu>\n              ) : (\n                <Menu.Item key={subMenuFirst.key}>\n                  {subMenuFirst.icon ? <Icon type={subMenuFirst.icon} /> : null}\n                  <span>{setLocale(localization, subMenuFirst.title)}</span>\n                  <Link\n                    onClick={() => closeMobileNav()}\n                    to={subMenuFirst.path}\n                  />\n                </Menu.Item>\n              )\n            )}\n          </Menu.ItemGroup>\n        ) : (\n          <Menu.Item key={menu.key}>\n            {menu.icon ? <Icon type={menu?.icon} /> : null}\n            <span>{setLocale(localization, menu?.title)}</span>\n            {menu.path ? (\n              <Link onClick={() => closeMobileNav()} to={menu.path} />\n            ) : null}\n          </Menu.Item>\n        )\n      )}\n    </Menu>\n  );\n};\n\nconst TopNavContent = (props: any) => {\n  const { topNavColor, localization } = props;\n  return (\n    <Menu mode=\"horizontal\" style={{ backgroundColor: topNavColor }}>\n      {navigationConfig.map((menu) =>\n        menu.submenu.length > 0 ? (\n          <SubMenu\n            key={menu.key}\n            popupClassName=\"top-nav-menu\"\n            title={\n              <span>\n                {menu.icon ? <Icon type={menu?.icon} /> : null}\n                <span>{setLocale(localization, menu.title)}</span>\n              </span>\n            }\n          >\n            {menu.submenu.map((subMenuFirst: any) =>\n              subMenuFirst.submenu.length > 0 ? (\n                <SubMenu\n                  key={subMenuFirst.key}\n                  icon={\n                    subMenuFirst.icon ? (\n                      <Icon type={subMenuFirst?.icon} />\n                    ) : null\n                  }\n                  title={setLocale(localization, subMenuFirst.title)}\n                >\n                  {subMenuFirst.submenu.map((subMenuSecond: any) => (\n                    <Menu.Item key={subMenuSecond[\"key\"]}>\n                      <span>\n                        {setLocale(localization, subMenuSecond[\"title\"])}\n                      </span>\n                      <Link to={subMenuSecond[\"path\"]} />\n                    </Menu.Item>\n                  ))}\n                </SubMenu>\n              ) : (\n                <Menu.Item key={subMenuFirst.key}>\n                  {subMenuFirst.icon ? (\n                    <Icon type={subMenuFirst?.icon} />\n                  ) : null}\n                  <span>{setLocale(localization, subMenuFirst.title)}</span>\n                  <Link to={subMenuFirst.path} />\n                </Menu.Item>\n              )\n            )}\n          </SubMenu>\n        ) : (\n          <Menu.Item key={menu.key}>\n            {menu.icon ? <Icon type={menu?.icon} /> : null}\n            <span>{setLocale(localization, menu?.title)}</span>\n            {menu.path ? <Link to={menu.path} /> : null}\n          </Menu.Item>\n        )\n      )}\n    </Menu>\n  );\n};\n\nconst MenuContent = (props: any) => {\n  return props.type === NAV_TYPE_SIDE ? (\n    <SideNavContent {...props} />\n  ) : (\n    <TopNavContent {...props} />\n  );\n};\n\nconst mapStateToProps = ({ theme }: IState) => {\n  const { sideNavTheme, topNavColor } = theme as ITheme;\n  return { sideNavTheme, topNavColor };\n};\n\nexport default connect(mapStateToProps, { onMobileNavToggle })(MenuContent);\n"]},"metadata":{},"sourceType":"module"}