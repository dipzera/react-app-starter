{"ast":null,"code":"var _jsxFileName = \"/home/vlad/github/react-emilus-boilerplate/src/layouts/app-layout/index.tsx\";\nimport * as React from \"react\";\nimport { Layout, Grid, BackTop } from \"antd\";\nimport { connect } from \"react-redux\";\nimport SideNav from \"components/layout-components/SideNav\";\nimport TopNav from \"components/layout-components/TopNav\";\nimport MobileNav from \"components/layout-components/MobileNav\";\nimport HeaderNav from \"components/layout-components/HeaderNav\";\nimport PageHeader from \"components/layout-components/PageHeader\";\nimport Footer from \"components/layout-components/Footer\";\nimport AppViews from \"views/app-views\";\nimport navigationConfig from \"configs/NavigationConfig\";\nimport { SIDE_NAV_WIDTH, SIDE_NAV_COLLAPSED_WIDTH, NAV_TYPE_SIDE, NAV_TYPE_TOP } from \"constants/ThemeConstant\";\nimport Utils from \"../../utils\";\nconst {\n  Content\n} = Layout;\nconst {\n  useBreakpoint\n} = Grid;\nexport const AppLayout = ({\n  navCollapsed,\n  navType,\n  location\n}) => {\n  const currentRouteInfo = Utils.getRouteInfo(navigationConfig, location.pathname);\n  const screens = Utils.getBreakPoint(useBreakpoint());\n  const isMobile = !screens.includes(\"lg\");\n  const isNavSide = navType === NAV_TYPE_SIDE;\n  const isNavTop = navType === NAV_TYPE_TOP;\n\n  const getLayoutGutter = () => {\n    if (isNavTop || isMobile) {\n      return 0;\n    }\n\n    return navCollapsed ? SIDE_NAV_COLLAPSED_WIDTH : SIDE_NAV_WIDTH;\n  };\n\n  return /*#__PURE__*/React.createElement(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(HeaderNav, {\n    isMobile: isMobile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }), isNavTop && !isMobile ? /*#__PURE__*/React.createElement(TopNav, {\n    routeInfo: currentRouteInfo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 32\n    }\n  }) : null, /*#__PURE__*/React.createElement(Layout, {\n    className: \"app-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, isNavSide && !isMobile ? /*#__PURE__*/React.createElement(SideNav, {\n    routeInfo: currentRouteInfo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }) : null, /*#__PURE__*/React.createElement(Layout, {\n    className: \"app-layout\",\n    style: {\n      paddingLeft: getLayoutGutter()\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `app-content ${isNavTop ? \"layout-top-nav\" : \"\"}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(PageHeader, {\n    display: currentRouteInfo === null || currentRouteInfo === void 0 ? void 0 : currentRouteInfo.breadcrumb,\n    title: currentRouteInfo === null || currentRouteInfo === void 0 ? void 0 : currentRouteInfo.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(AppViews, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(BackTop, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }))), isMobile && /*#__PURE__*/React.createElement(MobileNav, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 20\n    }\n  }));\n};\n\nconst mapStateToProps = ({\n  theme,\n  auth\n}) => {\n  const {\n    navCollapsed,\n    navType,\n    locale\n  } = theme;\n  const {\n    token\n  } = auth;\n  return {\n    navCollapsed,\n    navType,\n    locale,\n    token\n  };\n};\n\nexport default connect(mapStateToProps)(React.memo(AppLayout));","map":{"version":3,"sources":["/home/vlad/github/react-emilus-boilerplate/src/layouts/app-layout/index.tsx"],"names":["React","Layout","Grid","BackTop","connect","SideNav","TopNav","MobileNav","HeaderNav","PageHeader","Footer","AppViews","navigationConfig","SIDE_NAV_WIDTH","SIDE_NAV_COLLAPSED_WIDTH","NAV_TYPE_SIDE","NAV_TYPE_TOP","Utils","Content","useBreakpoint","AppLayout","navCollapsed","navType","location","currentRouteInfo","getRouteInfo","pathname","screens","getBreakPoint","isMobile","includes","isNavSide","isNavTop","getLayoutGutter","paddingLeft","breadcrumb","title","mapStateToProps","theme","auth","locale","token","memo"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { Layout, Grid, BackTop } from \"antd\";\nimport { connect } from \"react-redux\";\nimport SideNav from \"components/layout-components/SideNav\";\nimport TopNav from \"components/layout-components/TopNav\";\nimport MobileNav from \"components/layout-components/MobileNav\";\nimport HeaderNav from \"components/layout-components/HeaderNav\";\nimport PageHeader from \"components/layout-components/PageHeader\";\nimport Footer from \"components/layout-components/Footer\";\nimport AppViews from \"views/app-views\";\nimport navigationConfig from \"configs/NavigationConfig\";\nimport {\n  SIDE_NAV_WIDTH,\n  SIDE_NAV_COLLAPSED_WIDTH,\n  NAV_TYPE_SIDE,\n  NAV_TYPE_TOP,\n} from \"constants/ThemeConstant\";\nimport Utils from \"../../utils\";\nimport { ITheme } from \"redux/reducers/Theme\";\nimport { IState } from \"redux/reducers\";\nimport { IAuth } from \"redux/reducers/Auth\";\n\nconst { Content } = Layout;\nconst { useBreakpoint } = Grid;\n\nexport const AppLayout = ({ navCollapsed, navType, location }: any) => {\n  const currentRouteInfo = Utils.getRouteInfo(\n    navigationConfig,\n    location.pathname\n  );\n  const screens = Utils.getBreakPoint(useBreakpoint());\n  const isMobile = !screens.includes(\"lg\");\n  const isNavSide = navType === NAV_TYPE_SIDE;\n  const isNavTop = navType === NAV_TYPE_TOP;\n  const getLayoutGutter = () => {\n    if (isNavTop || isMobile) {\n      return 0;\n    }\n    return navCollapsed ? SIDE_NAV_COLLAPSED_WIDTH : SIDE_NAV_WIDTH;\n  };\n  return (\n    <Layout>\n      <HeaderNav isMobile={isMobile} />\n      {isNavTop && !isMobile ? <TopNav routeInfo={currentRouteInfo} /> : null}\n      <Layout className=\"app-container\">\n        {isNavSide && !isMobile ? (\n          <SideNav routeInfo={currentRouteInfo} />\n        ) : null}\n        <Layout\n          className=\"app-layout\"\n          style={{ paddingLeft: getLayoutGutter() }}\n        >\n          <div className={`app-content ${isNavTop ? \"layout-top-nav\" : \"\"}`}>\n            <PageHeader\n              display={currentRouteInfo?.breadcrumb}\n              title={currentRouteInfo?.title}\n            />\n            <Content>\n              <AppViews />\n            </Content>\n          </div>\n          <BackTop />\n          <Footer />\n        </Layout>\n      </Layout>\n      {isMobile && <MobileNav />}\n    </Layout>\n  );\n};\n\nconst mapStateToProps = ({ theme, auth }: IState) => {\n  const { navCollapsed, navType, locale } = theme as ITheme;\n  const { token } = auth as IAuth;\n  return { navCollapsed, navType, locale, token };\n};\n\nexport default connect(mapStateToProps)(React.memo(AppLayout));\n"]},"metadata":{},"sourceType":"module"}