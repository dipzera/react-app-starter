{"ast":null,"code":"var _jsxFileName = \"/home/vlad/github/react-emilus-boilerplate/src/views/auth-views/authentication/forgot-password/index.tsx\";\nimport React, { useState } from \"react\";\nimport { Card, Row, Col, Form, Input, Button } from \"antd\";\nimport { MailOutlined } from \"@ant-design/icons\";\nimport { NavLink } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport IntlMessage from \"components/util-components/IntlMessage\";\nconst backgroundStyle = {\n  backgroundImage: `url(${process.env.PUBLIC_URL}/img/others/img-17.jpg)`,\n  backgroundRepeat: \"no-repeat\",\n  backgroundSize: \"cover\"\n};\n\nconst ForgotPassword = () => {\n  const [form] = Form.useForm();\n  const [loading, setLoading] = useState(false);\n\n  const onSend = async ({\n    email\n  }) => {};\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"h-100\",\n    style: backgroundStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container d-flex flex-column justify-content-center h-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: 20,\n    sm: 20,\n    md: 20,\n    lg: 9,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"my-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"img-fluid\",\n    src: process.env.PUBLIC_URL + \"/img/is-logo-dark.png\",\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"mt-3 font-weight-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(IntlMessage, {\n    id: \"auth.ForgotPassword\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(IntlMessage, {\n    id: \"auth.ForgotPasswordMessage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(Row, {\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: 24,\n    sm: 24,\n    md: 20,\n    lg: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    form: form,\n    layout: \"vertical\",\n    name: \"forget-password\",\n    onFinish: onSend,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"email\",\n    rules: [{\n      required: true,\n      message: /*#__PURE__*/React.createElement(IntlMessage, {\n        id: \"auth.MessageInsertEmail\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 31\n        }\n      })\n    }, {\n      type: \"email\",\n      message: /*#__PURE__*/React.createElement(IntlMessage, {\n        id: \"auth.MessageInsertValidEmail\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 31\n        }\n      })\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Email Address\",\n    prefix: /*#__PURE__*/React.createElement(MailOutlined, {\n      className: \"text-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 35\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    loading: loading,\n    type: \"primary\",\n    htmlType: \"submit\",\n    block: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 25\n    }\n  }, \" \", loading ? /*#__PURE__*/React.createElement(IntlMessage, {\n    id: \"auth.Sending\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 29\n    }\n  }) : /*#__PURE__*/React.createElement(IntlMessage, {\n    id: \"auth.Send\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(NavLink, {\n    to: \"auth/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(IntlMessage, {\n    id: \"auth.GoBack\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 25\n    }\n  })))))))))));\n};\n\nexport default connect(null, null)(ForgotPassword);","map":{"version":3,"sources":["/home/vlad/github/react-emilus-boilerplate/src/views/auth-views/authentication/forgot-password/index.tsx"],"names":["React","useState","Card","Row","Col","Form","Input","Button","MailOutlined","NavLink","connect","IntlMessage","backgroundStyle","backgroundImage","process","env","PUBLIC_URL","backgroundRepeat","backgroundSize","ForgotPassword","form","useForm","loading","setLoading","onSend","email","required","message","type"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Card, Row, Col, Form, Input, Button } from \"antd\";\nimport { MailOutlined } from \"@ant-design/icons\";\nimport { NavLink } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport IntlMessage from \"components/util-components/IntlMessage\";\n\nconst backgroundStyle = {\n  backgroundImage: `url(${process.env.PUBLIC_URL}/img/others/img-17.jpg)`,\n  backgroundRepeat: \"no-repeat\",\n  backgroundSize: \"cover\",\n};\n\nconst ForgotPassword = () => {\n  const [form] = Form.useForm();\n  const [loading, setLoading] = useState(false);\n\n  const onSend = async ({ email }: any) => {};\n\n  return (\n    <div className=\"h-100\" style={backgroundStyle}>\n      <div className=\"container d-flex flex-column justify-content-center h-100\">\n        <Row justify=\"center\">\n          <Col xs={20} sm={20} md={20} lg={9}>\n            <Card>\n              <div className=\"my-2\">\n                <div className=\"text-center\">\n                  <img\n                    className=\"img-fluid\"\n                    src={process.env.PUBLIC_URL + \"/img/is-logo-dark.png\"}\n                    alt=\"\"\n                  />\n                  <h3 className=\"mt-3 font-weight-bold\">\n                    <IntlMessage id={\"auth.ForgotPassword\"} />\n                  </h3>\n                  <p className=\"mb-4\">\n                    <IntlMessage id={\"auth.ForgotPasswordMessage\"} />\n                  </p>\n                </div>\n                <Row justify=\"center\">\n                  <Col xs={24} sm={24} md={20} lg={20}>\n                    <Form\n                      form={form}\n                      layout=\"vertical\"\n                      name=\"forget-password\"\n                      onFinish={onSend}\n                    >\n                      <Form.Item\n                        name=\"email\"\n                        rules={[\n                          {\n                            required: true,\n                            message: (\n                              <IntlMessage id={\"auth.MessageInsertEmail\"} />\n                            ),\n                          },\n                          {\n                            type: \"email\",\n                            message: (\n                              <IntlMessage\n                                id={\"auth.MessageInsertValidEmail\"}\n                              />\n                            ),\n                          },\n                        ]}\n                      >\n                        <Input\n                          placeholder=\"Email Address\"\n                          prefix={<MailOutlined className=\"text-primary\" />}\n                        />\n                      </Form.Item>\n                      <Form.Item>\n                        <Button\n                          loading={loading}\n                          type=\"primary\"\n                          htmlType=\"submit\"\n                          block\n                        >\n                          {\" \"}\n                          {loading ? (\n                            <IntlMessage id={\"auth.Sending\"} />\n                          ) : (\n                            <IntlMessage id={\"auth.Send\"} />\n                          )}\n                        </Button>\n                      </Form.Item>\n                      <NavLink to={\"auth/login\"}>\n                        <IntlMessage id={\"auth.GoBack\"} />\n                      </NavLink>\n                    </Form>\n                  </Col>\n                </Row>\n              </div>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(null, null)(ForgotPassword);\n"]},"metadata":{},"sourceType":"module"}