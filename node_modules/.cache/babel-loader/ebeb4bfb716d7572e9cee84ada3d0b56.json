{"ast":null,"code":"var _jsxFileName = \"/home/vlad/github/react-emilus-boilerplate/src/components/layout-components/NavLanguage.tsx\";\nimport * as React from \"react\";\nimport { CheckOutlined, GlobalOutlined, DownOutlined } from \"@ant-design/icons\";\nimport { Menu, Dropdown } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { lang } from \"assets/data/language.data.json\";\nimport { onLocaleChange } from \"redux/actions/Theme\";\n\nfunction getLanguageDetail(locale) {\n  const data = lang.filter(elm => elm.langId === locale);\n  return data[0];\n}\n\nconst SelectedLanguage = ({\n  locale\n}) => {\n  const language = getLanguageDetail(locale);\n  const {\n    langName,\n    icon\n  } = language;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    style: {\n      maxWidth: \"20px\"\n    },\n    src: `${process.env.PUBLIC_URL}/img/flags/${icon}.png`,\n    alt: langName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"font-weight-semibold ml-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, langName, \" \", /*#__PURE__*/React.createElement(DownOutlined, {\n    className: \"font-size-xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 20\n    }\n  })));\n};\n\nconst NavLanguage = ({\n  locale,\n  configDisplay,\n  onLocaleChange,\n  triggerType\n}) => {\n  const languageOption = /*#__PURE__*/React.createElement(Menu, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, lang.map(elm => {\n    return /*#__PURE__*/React.createElement(Menu.Item, {\n      key: elm.langId,\n      className: locale === elm.langId ? \"ant-dropdown-menu-item-active\" : \"\",\n      onClick: () => {\n        onLocaleChange(elm[\"langId\"]); // Send language to api\n        //\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-between align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      style: {\n        maxWidth: \"20px\"\n      },\n      src: process.env.PUBLIC_URL + `/img/flags/${elm.icon}.png`,\n      alt: elm.langName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"font-weight-normal ml-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }, elm.langName)), locale === elm.langId && /*#__PURE__*/React.createElement(CheckOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 41\n      }\n    })));\n  }));\n  return /*#__PURE__*/React.createElement(Dropdown, {\n    placement: \"bottomRight\",\n    overlay: languageOption,\n    trigger: [triggerType],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, configDisplay ? /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#/\",\n    className: \"text-gray\",\n    onClick: e => e.preventDefault(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SelectedLanguage, {\n    locale: locale,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  })) : /*#__PURE__*/React.createElement(Menu, {\n    style: {\n      border: \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Menu.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(GlobalOutlined, {\n    className: \"nav-icon mr-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }))));\n};\n\nconst mapStateToProps = ({\n  theme,\n  account,\n  auth\n}) => {\n  const {\n    locale\n  } = theme;\n  const {\n    token\n  } = auth;\n  return {\n    locale,\n    account,\n    token\n  };\n};\n\nconst mapDispatchToProps = {\n  onLocaleChange\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(NavLanguage);","map":{"version":3,"sources":["/home/vlad/github/react-emilus-boilerplate/src/components/layout-components/NavLanguage.tsx"],"names":["React","CheckOutlined","GlobalOutlined","DownOutlined","Menu","Dropdown","connect","lang","onLocaleChange","getLanguageDetail","locale","data","filter","elm","langId","SelectedLanguage","language","langName","icon","maxWidth","process","env","PUBLIC_URL","NavLanguage","configDisplay","triggerType","languageOption","map","e","preventDefault","border","mapStateToProps","theme","account","auth","token","mapDispatchToProps"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { CheckOutlined, GlobalOutlined, DownOutlined } from \"@ant-design/icons\";\nimport { Menu, Dropdown } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { lang } from \"assets/data/language.data.json\";\nimport { onLocaleChange } from \"redux/actions/Theme\";\nimport { IState } from \"redux/reducers\";\nimport { ITheme } from \"redux/reducers/Theme\";\nimport { IAuth } from \"redux/reducers/Auth\";\ninterface NavLanguageProps {\n  [key: string]: any;\n}\n\nfunction getLanguageDetail(locale: string) {\n  const data = lang.filter((elm) => elm.langId === locale);\n  return data[0];\n}\n\nconst SelectedLanguage = ({ locale }: { [key: string]: any }) => {\n  const language = getLanguageDetail(locale);\n  const { langName, icon } = language;\n\n  return (\n    <div className=\"d-flex align-items-center\">\n      <img\n        style={{ maxWidth: \"20px\" }}\n        src={`${process.env.PUBLIC_URL}/img/flags/${icon}.png`}\n        alt={langName}\n      />\n      <span className=\"font-weight-semibold ml-2\">\n        {langName} <DownOutlined className=\"font-size-xs\" />\n      </span>\n    </div>\n  );\n};\n\nconst NavLanguage = ({\n  locale,\n  configDisplay,\n  onLocaleChange,\n  triggerType,\n}: NavLanguageProps) => {\n  const languageOption = (\n    <Menu>\n      {lang.map((elm) => {\n        return (\n          <Menu.Item\n            key={elm.langId}\n            className={\n              locale === elm.langId ? \"ant-dropdown-menu-item-active\" : \"\"\n            }\n            onClick={() => {\n              onLocaleChange(elm[\"langId\"]);\n              // Send language to api\n              //\n            }}\n          >\n            <div className=\"d-flex justify-content-between align-items-center\">\n              <div>\n                <img\n                  style={{ maxWidth: \"20px\" }}\n                  src={process.env.PUBLIC_URL + `/img/flags/${elm.icon}.png`}\n                  alt={elm.langName}\n                />\n                <span className=\"font-weight-normal ml-2\">{elm.langName}</span>\n              </div>\n              {locale === elm.langId && <CheckOutlined />}\n            </div>\n          </Menu.Item>\n        );\n      })}\n    </Menu>\n  );\n  return (\n    <Dropdown\n      placement=\"bottomRight\"\n      overlay={languageOption}\n      trigger={[triggerType]}\n    >\n      {configDisplay ? (\n        <a href=\"#/\" className=\"text-gray\" onClick={(e) => e.preventDefault()}>\n          <SelectedLanguage locale={locale} />\n        </a>\n      ) : (\n        <Menu style={{ border: \"none\" }}>\n          <Menu.Item>\n            <GlobalOutlined className=\"nav-icon mr-0\" />\n          </Menu.Item>\n        </Menu>\n      )}\n    </Dropdown>\n  );\n};\n\nconst mapStateToProps = ({ theme, account, auth }: IState) => {\n  const { locale } = theme as ITheme;\n  const { token } = auth as IAuth;\n  return { locale, account, token };\n};\nconst mapDispatchToProps = {\n  onLocaleChange,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NavLanguage);\n"]},"metadata":{},"sourceType":"module"}