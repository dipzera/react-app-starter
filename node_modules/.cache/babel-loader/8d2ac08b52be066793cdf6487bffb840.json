{"ast":null,"code":"var _jsxFileName = \"/home/vlad/github/react-emilus-boilerplate/src/views/auth-views/components/LoginForm.tsx\";\nimport * as React from \"react\";\nimport { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Button, Form, Input, Divider, Alert } from \"antd\";\nimport { MailOutlined, LockOutlined } from \"@ant-design/icons\";\nimport { GoogleSVG, FacebookSVG } from \"assets/svg/icon\";\nimport CustomIcon from \"components/util-components/CustomIcon\";\nimport { showLoading, showAuthMessage, hideAuthMessage, authenticated } from \"redux/actions/Auth\";\nimport { updateSettings } from \"redux/actions/Account\";\nimport { motion } from \"framer-motion\";\nimport { NavLink, useHistory } from \"react-router-dom\";\nimport { hideLoading } from \"redux/actions/Auth\";\nimport IntlMessage from \"components/util-components/IntlMessage\";\nimport { APP_PREFIX_PATH } from \"configs/AppConfig\";\n\nconst LoginForm = ({\n  showForgetPassword,\n  hideAuthMessage,\n  onForgetPasswordClick,\n  showLoading,\n  extra,\n  loading,\n  showMessage,\n  message,\n  authenticated\n}) => {\n  const history = useHistory();\n\n  const onLogin = async ({\n    email,\n    password\n  }) => {\n    authenticated(\"FAKE TOKEN\");\n    history.push(APP_PREFIX_PATH);\n  };\n\n  const onGoogleLogin = () => {\n    showLoading();\n  };\n\n  const onFacebookLogin = () => {\n    showLoading();\n  };\n\n  useEffect(() => {\n    if (showMessage) {\n      setTimeout(() => {\n        hideAuthMessage();\n      }, 3000);\n    }\n  }, [showMessage]);\n  const otherSignIn = false;\n  const renderOtherSignIn = /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-muted font-size-base font-weight-normal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, \"or connect with\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => onGoogleLogin(),\n    className: \"mr-2\",\n    disabled: loading,\n    icon: /*#__PURE__*/React.createElement(CustomIcon, {\n      svg: GoogleSVG,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, \"Google\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => onFacebookLogin(),\n    icon: /*#__PURE__*/React.createElement(CustomIcon, {\n      svg: FacebookSVG,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    }),\n    disabled: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, \"Facebook\")));\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(motion.div, {\n    initial: {\n      opacity: 0,\n      marginBottom: 0\n    },\n    animate: {\n      opacity: showMessage ? 1 : 0,\n      marginBottom: showMessage ? 20 : 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    type: \"error\",\n    showIcon: true,\n    message: message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Form, {\n    layout: \"vertical\",\n    name: \"login-form\",\n    onFinish: onLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"email\",\n    label: /*#__PURE__*/React.createElement(IntlMessage, {\n      id: \"auth.Email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 18\n      }\n    }),\n    rules: [{\n      required: true,\n      message: /*#__PURE__*/React.createElement(IntlMessage, {\n        id: \"auth.MessageInsertEmail\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 24\n        }\n      })\n    }, {\n      type: \"email\",\n      message: /*#__PURE__*/React.createElement(IntlMessage, {\n        id: \"auth.MessageInsertValidEmail\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 24\n        }\n      })\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    prefix: /*#__PURE__*/React.createElement(MailOutlined, {\n      className: \"text-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 26\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"password\",\n    label: /*#__PURE__*/React.createElement(\"div\", {\n      className: `${showForgetPassword ? \"d-flex justify-content-between w-100 align-items-center\" : \"\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessage, {\n      id: \"auth.Password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }\n    })), showForgetPassword && /*#__PURE__*/React.createElement(\"span\", {\n      onClick: () => onForgetPasswordClick,\n      className: \"cursor-pointer font-size-sm font-weight-normal text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }\n    }, \"Forget Password?\")),\n    rules: [{\n      required: true,\n      message: /*#__PURE__*/React.createElement(IntlMessage, {\n        id: \"auth.MessageInsertPassword\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 24\n        }\n      })\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input.Password, {\n    prefix: /*#__PURE__*/React.createElement(LockOutlined, {\n      className: \"text-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 35\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    block: true,\n    loading: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  }, \" \", /*#__PURE__*/React.createElement(IntlMessage, {\n    id: \"auth.SignIn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(NavLink, {\n    to: \"/auth/forgot-password\",\n    className: \"text-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IntlMessage, {\n    id: \"auth.ForgotPassword\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 11\n    }\n  })), otherSignIn && renderOtherSignIn, extra));\n};\n\nconst mapStateToProps = ({\n  auth\n}) => {\n  const {\n    loading,\n    message,\n    showMessage,\n    token,\n    redirect,\n    userActivated\n  } = auth;\n  return {\n    loading,\n    message,\n    showMessage,\n    token,\n    redirect,\n    userActivated\n  };\n};\n\nconst mapDispatchToProps = {\n  showAuthMessage,\n  showLoading,\n  hideAuthMessage,\n  authenticated,\n  updateSettings,\n  hideLoading\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm);","map":{"version":3,"sources":["/home/vlad/github/react-emilus-boilerplate/src/views/auth-views/components/LoginForm.tsx"],"names":["React","useEffect","connect","Button","Form","Input","Divider","Alert","MailOutlined","LockOutlined","GoogleSVG","FacebookSVG","CustomIcon","showLoading","showAuthMessage","hideAuthMessage","authenticated","updateSettings","motion","NavLink","useHistory","hideLoading","IntlMessage","APP_PREFIX_PATH","LoginForm","showForgetPassword","onForgetPasswordClick","extra","loading","showMessage","message","history","onLogin","email","password","push","onGoogleLogin","onFacebookLogin","setTimeout","otherSignIn","renderOtherSignIn","opacity","marginBottom","required","type","mapStateToProps","auth","token","redirect","userActivated","mapDispatchToProps"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Button, Form, Input, Divider, Alert } from \"antd\";\nimport { MailOutlined, LockOutlined } from \"@ant-design/icons\";\nimport { GoogleSVG, FacebookSVG } from \"assets/svg/icon\";\nimport CustomIcon from \"components/util-components/CustomIcon\";\nimport {\n  showLoading,\n  showAuthMessage,\n  hideAuthMessage,\n  authenticated,\n} from \"redux/actions/Auth\";\nimport { updateSettings } from \"redux/actions/Account\";\nimport { motion } from \"framer-motion\";\nimport { NavLink, useHistory } from \"react-router-dom\";\nimport { hideLoading } from \"redux/actions/Auth\";\nimport IntlMessage from \"components/util-components/IntlMessage\";\nimport { IState } from \"redux/reducers\";\nimport { IAuth } from \"redux/reducers/Auth\";\nimport { APP_PREFIX_PATH } from \"configs/AppConfig\";\n\nconst LoginForm = ({\n  showForgetPassword,\n  hideAuthMessage,\n  onForgetPasswordClick,\n  showLoading,\n  extra,\n  loading,\n  showMessage,\n  message,\n  authenticated,\n}: any) => {\n  const history = useHistory();\n  const onLogin = async ({ email, password }: { [key: string]: string }) => {\n    authenticated(\"FAKE TOKEN\");\n    history.push(APP_PREFIX_PATH);\n  };\n  const onGoogleLogin = () => {\n    showLoading();\n  };\n\n  const onFacebookLogin = () => {\n    showLoading();\n  };\n\n  useEffect(() => {\n    if (showMessage) {\n      setTimeout(() => {\n        hideAuthMessage();\n      }, 3000);\n    }\n  }, [showMessage]);\n  const otherSignIn = false;\n\n  const renderOtherSignIn = (\n    <div>\n      <Divider>\n        <span className=\"text-muted font-size-base font-weight-normal\">\n          or connect with\n        </span>\n      </Divider>\n      <div className=\"d-flex justify-content-center\">\n        <Button\n          onClick={() => onGoogleLogin()}\n          className=\"mr-2\"\n          disabled={loading}\n          icon={<CustomIcon svg={GoogleSVG} />}\n        >\n          Google\n        </Button>\n        <Button\n          onClick={() => onFacebookLogin()}\n          icon={<CustomIcon svg={FacebookSVG} />}\n          disabled={loading}\n        >\n          Facebook\n        </Button>\n      </div>\n    </div>\n  );\n\n  return (\n    <>\n      <motion.div\n        initial={{ opacity: 0, marginBottom: 0 }}\n        animate={{\n          opacity: showMessage ? 1 : 0,\n          marginBottom: showMessage ? 20 : 0,\n        }}\n      >\n        <Alert type=\"error\" showIcon message={message} />\n      </motion.div>\n      <Form layout=\"vertical\" name=\"login-form\" onFinish={onLogin}>\n        <Form.Item\n          name=\"email\"\n          label={<IntlMessage id={\"auth.Email\"} />}\n          rules={[\n            {\n              required: true,\n              message: <IntlMessage id={\"auth.MessageInsertEmail\"} />,\n            },\n            {\n              type: \"email\",\n              message: <IntlMessage id={\"auth.MessageInsertValidEmail\"} />,\n            },\n          ]}\n        >\n          <Input prefix={<MailOutlined className=\"text-primary\" />} />\n        </Form.Item>\n        <Form.Item\n          name=\"password\"\n          label={\n            <div\n              className={`${\n                showForgetPassword\n                  ? \"d-flex justify-content-between w-100 align-items-center\"\n                  : \"\"\n              }`}\n            >\n              <span>\n                <IntlMessage id={\"auth.Password\"} />\n              </span>\n              {showForgetPassword && (\n                <span\n                  onClick={() => onForgetPasswordClick}\n                  className=\"cursor-pointer font-size-sm font-weight-normal text-muted\"\n                >\n                  Forget Password?\n                </span>\n              )}\n            </div>\n          }\n          rules={[\n            {\n              required: true,\n              message: <IntlMessage id={\"auth.MessageInsertPassword\"} />,\n            },\n          ]}\n        >\n          <Input.Password prefix={<LockOutlined className=\"text-primary\" />} />\n        </Form.Item>\n\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\" block loading={loading}>\n            {\" \"}\n            <IntlMessage id={\"auth.SignIn\"} />\n          </Button>\n        </Form.Item>\n        <NavLink to={\"/auth/forgot-password\"} className={\"text-right\"}>\n          <IntlMessage id={\"auth.ForgotPassword\"} />\n        </NavLink>\n        {/*{otherSignIn ? renderOtherSignIn : null}*/}\n        {otherSignIn && renderOtherSignIn}\n        {extra}\n      </Form>\n    </>\n  );\n};\n\nconst mapStateToProps = ({ auth }: IState) => {\n  const {\n    loading,\n    message,\n    showMessage,\n    token,\n    redirect,\n    userActivated,\n  } = auth as IAuth;\n  return {\n    loading,\n    message,\n    showMessage,\n    token,\n    redirect,\n    userActivated,\n  };\n};\n\nconst mapDispatchToProps = {\n  showAuthMessage,\n  showLoading,\n  hideAuthMessage,\n  authenticated,\n  updateSettings,\n  hideLoading,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm);\n"]},"metadata":{},"sourceType":"module"}