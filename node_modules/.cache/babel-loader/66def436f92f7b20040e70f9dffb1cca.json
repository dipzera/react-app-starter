{"ast":null,"code":"var _jsxFileName = \"/home/vlad/github/react-emilus-boilerplate/src/utils/translate.tsx\";\nimport React from \"react\";\nimport ReactDOMServer from \"react-dom/server\";\nimport { IntlProvider } from \"react-intl\";\nimport IntlMessage from \"components/util-components/IntlMessage\";\nimport AppLocale from \"lang\";\nimport store from \"redux/store\";\n\nconst TranslateText = message => {\n  const locale = store.getState().theme.locale;\n  const currentAppLocale = AppLocale[locale];\n  return ReactDOMServer.renderToString( /*#__PURE__*/React.createElement(IntlProvider, {\n    locale: currentAppLocale.locale,\n    messages: currentAppLocale.messages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(IntlMessage, {\n    id: message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  })));\n};\n\nexport default TranslateText;","map":{"version":3,"sources":["/home/vlad/github/react-emilus-boilerplate/src/utils/translate.tsx"],"names":["React","ReactDOMServer","IntlProvider","IntlMessage","AppLocale","store","TranslateText","message","locale","getState","theme","currentAppLocale","renderToString","messages"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,YAAT,QAA6B,YAA7B;AACA,OAAOC,WAAP,MAAwB,wCAAxB;AACA,OAAOC,SAAP,MAAsB,MAAtB;AACA,OAAOC,KAAP,MAAkB,aAAlB;;AAEA,MAAMC,aAAa,GAAIC,OAAD,IAAqB;AACzC,QAAMC,MAAM,GAAGH,KAAK,CAACI,QAAN,GAAiBC,KAAjB,CAAuBF,MAAtC;AACA,QAAMG,gBAAgB,GAAGP,SAAS,CAACI,MAAD,CAAlC;AACA,SAAOP,cAAc,CAACW,cAAf,eACL,oBAAC,YAAD;AACE,IAAA,MAAM,EAAED,gBAAgB,CAACH,MAD3B;AAEE,IAAA,QAAQ,EAAEG,gBAAgB,CAACE,QAF7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE,oBAAC,WAAD;AAAa,IAAA,EAAE,EAAEN,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADK,CAAP;AAQD,CAXD;;AAaA,eAAeD,aAAf","sourcesContent":["import React from \"react\";\nimport ReactDOMServer from \"react-dom/server\";\nimport { IntlProvider } from \"react-intl\";\nimport IntlMessage from \"components/util-components/IntlMessage\";\nimport AppLocale from \"lang\";\nimport store from \"redux/store\";\n\nconst TranslateText = (message: string) => {\n  const locale = store.getState().theme.locale;\n  const currentAppLocale = AppLocale[locale];\n  return ReactDOMServer.renderToString(\n    <IntlProvider\n      locale={currentAppLocale.locale}\n      messages={currentAppLocale.messages}\n    >\n      <IntlMessage id={message} />\n    </IntlProvider>\n  );\n};\n\nexport default TranslateText;\n"]},"metadata":{},"sourceType":"module"}