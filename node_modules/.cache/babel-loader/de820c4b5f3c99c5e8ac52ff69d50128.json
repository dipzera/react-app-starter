{"ast":null,"code":"var _jsxFileName = \"/home/vlad/github/react-emilus-boilerplate/src/components/layout-components/Logo.tsx\";\nimport React from \"react\";\nimport { SIDE_NAV_WIDTH, SIDE_NAV_COLLAPSED_WIDTH, NAV_TYPE_TOP } from \"../../constants/ThemeConstant\";\nimport { APP_NAME } from \"../../configs/AppConfig\";\nimport { connect } from \"react-redux\";\nimport utils from \"../../utils\";\nimport { Grid } from \"antd\";\nconst {\n  useBreakpoint\n} = Grid;\n\nconst getLogoWidthGutter = (props, isMobile) => {\n  const {\n    navCollapsed,\n    navType\n  } = props;\n  const isNavTop = navType === NAV_TYPE_TOP ? true : false;\n\n  if (isMobile && !props.mobileLogo) {\n    return 0;\n  }\n\n  if (isNavTop) {\n    return \"auto\";\n  }\n\n  if (navCollapsed) {\n    return `${SIDE_NAV_COLLAPSED_WIDTH}px`;\n  } else {\n    return `${SIDE_NAV_WIDTH}px`;\n  }\n};\n\nconst getLogo = ({\n  navCollapsed,\n  logoType\n}) => {\n  if (logoType === \"light\") {\n    if (navCollapsed) {\n      return process.env.PUBLIC_URL + \"/img/rsz_is_logo-efactura.png\";\n    }\n\n    return process.env.PUBLIC_URL + \"/img/is_logo-efactura.png\";\n  }\n\n  if (navCollapsed) {\n    return process.env.PUBLIC_URL + \"/img/rsz_is-logo-dark.png\";\n  }\n\n  return process.env.PUBLIC_URL + \"/img/is-logo-dark.png\";\n};\n\nconst getLogoDisplay = (isMobile, mobileLogo) => {\n  if (isMobile && !mobileLogo) {\n    return \"d-none\";\n  } else {\n    return \"logo\";\n  }\n};\n\nexport const Logo = props => {\n  const isMobile = !utils.getBreakPoint(useBreakpoint()).includes(\"lg\");\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: getLogoDisplay(isMobile, props.mobileLogo),\n    style: {\n      width: `${getLogoWidthGutter(props, isMobile)}`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: getLogo(props),\n    alt: `${APP_NAME} logo`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }));\n};\n\nconst mapStateToProps = ({\n  theme\n}) => {\n  const {\n    navCollapsed,\n    navType\n  } = theme;\n  return {\n    navCollapsed,\n    navType\n  };\n};\n\nexport default connect(mapStateToProps)(Logo);","map":{"version":3,"sources":["/home/vlad/github/react-emilus-boilerplate/src/components/layout-components/Logo.tsx"],"names":["React","SIDE_NAV_WIDTH","SIDE_NAV_COLLAPSED_WIDTH","NAV_TYPE_TOP","APP_NAME","connect","utils","Grid","useBreakpoint","getLogoWidthGutter","props","isMobile","navCollapsed","navType","isNavTop","mobileLogo","getLogo","logoType","process","env","PUBLIC_URL","getLogoDisplay","Logo","getBreakPoint","includes","width","mapStateToProps","theme"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACIC,cADJ,EAEIC,wBAFJ,EAGIC,YAHJ,QAIO,+BAJP;AAKA,SAASC,QAAT,QAAyB,yBAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,IAAT,QAAqB,MAArB;AAQA,MAAM;AAAEC,EAAAA;AAAF,IAAoBD,IAA1B;;AAEA,MAAME,kBAAkB,GAAG,CAACC,KAAD,EAAaC,QAAb,KAAmC;AAC1D,QAAM;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,MAA4BH,KAAlC;AACA,QAAMI,QAAQ,GAAGD,OAAO,KAAKV,YAAZ,GAA2B,IAA3B,GAAkC,KAAnD;;AACA,MAAIQ,QAAQ,IAAI,CAACD,KAAK,CAACK,UAAvB,EAAmC;AAC/B,WAAO,CAAP;AACH;;AACD,MAAID,QAAJ,EAAc;AACV,WAAO,MAAP;AACH;;AACD,MAAIF,YAAJ,EAAkB;AACd,WAAQ,GAAEV,wBAAyB,IAAnC;AACH,GAFD,MAEO;AACH,WAAQ,GAAED,cAAe,IAAzB;AACH;AACJ,CAdD;;AAgBA,MAAMe,OAAO,GAAG,CAAC;AAAEJ,EAAAA,YAAF;AAAgBK,EAAAA;AAAhB,CAAD,KAA0C;AACtD,MAAIA,QAAQ,KAAK,OAAjB,EAA0B;AACtB,QAAIL,YAAJ,EAAkB;AACd,aAAOM,OAAO,CAACC,GAAR,CAAYC,UAAZ,GAAyB,+BAAhC;AACH;;AACD,WAAOF,OAAO,CAACC,GAAR,CAAYC,UAAZ,GAAyB,2BAAhC;AACH;;AAED,MAAIR,YAAJ,EAAkB;AACd,WAAOM,OAAO,CAACC,GAAR,CAAYC,UAAZ,GAAyB,2BAAhC;AACH;;AACD,SAAOF,OAAO,CAACC,GAAR,CAAYC,UAAZ,GAAyB,uBAAhC;AACH,CAZD;;AAcA,MAAMC,cAAc,GAAG,CAACV,QAAD,EAAoBI,UAApB,KAA4C;AAC/D,MAAIJ,QAAQ,IAAI,CAACI,UAAjB,EAA6B;AACzB,WAAO,QAAP;AACH,GAFD,MAEO;AACH,WAAO,MAAP;AACH;AACJ,CAND;;AAQA,OAAO,MAAMO,IAAI,GAAIZ,KAAD,IAAgB;AAChC,QAAMC,QAAQ,GAAG,CAACL,KAAK,CAACiB,aAAN,CAAoBf,aAAa,EAAjC,EAAqCgB,QAArC,CAA8C,IAA9C,CAAlB;AACA,sBACI;AACI,IAAA,SAAS,EAAEH,cAAc,CAACV,QAAD,EAAWD,KAAK,CAACK,UAAjB,CAD7B;AAEI,IAAA,KAAK,EAAE;AAAEU,MAAAA,KAAK,EAAG,GAAEhB,kBAAkB,CAACC,KAAD,EAAQC,QAAR,CAAkB;AAAhD,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAII;AAAK,IAAA,GAAG,EAAEK,OAAO,CAACN,KAAD,CAAjB;AAA0B,IAAA,GAAG,EAAG,GAAEN,QAAS,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADJ;AAQH,CAVM;;AAYP,MAAMsB,eAAe,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAuB;AAC3C,QAAM;AAAEf,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,MAA4Bc,KAAlC;AACA,SAAO;AAAEf,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,GAAP;AACH,CAHD;;AAKA,eAAeR,OAAO,CAACqB,eAAD,CAAP,CAAyBJ,IAAzB,CAAf","sourcesContent":["import React from \"react\";\nimport {\n    SIDE_NAV_WIDTH,\n    SIDE_NAV_COLLAPSED_WIDTH,\n    NAV_TYPE_TOP,\n} from \"../../constants/ThemeConstant\";\nimport { APP_NAME } from \"../../configs/AppConfig\";\nimport { connect } from \"react-redux\";\nimport utils from \"../../utils\";\nimport { Grid } from \"antd\";\nimport { ITheme } from \"../../redux/reducers/Theme\";\nimport { IState } from \"../../redux/reducers\";\n\ninterface IGetLogo {\n    navCollapsed: boolean;\n    logoType: \"light\" | \"dark\";\n}\nconst { useBreakpoint } = Grid;\n\nconst getLogoWidthGutter = (props: any, isMobile: boolean) => {\n    const { navCollapsed, navType } = props;\n    const isNavTop = navType === NAV_TYPE_TOP ? true : false;\n    if (isMobile && !props.mobileLogo) {\n        return 0;\n    }\n    if (isNavTop) {\n        return \"auto\";\n    }\n    if (navCollapsed) {\n        return `${SIDE_NAV_COLLAPSED_WIDTH}px`;\n    } else {\n        return `${SIDE_NAV_WIDTH}px`;\n    }\n};\n\nconst getLogo = ({ navCollapsed, logoType }: IGetLogo) => {\n    if (logoType === \"light\") {\n        if (navCollapsed) {\n            return process.env.PUBLIC_URL + \"/img/rsz_is_logo-efactura.png\";\n        }\n        return process.env.PUBLIC_URL + \"/img/is_logo-efactura.png\";\n    }\n\n    if (navCollapsed) {\n        return process.env.PUBLIC_URL + \"/img/rsz_is-logo-dark.png\";\n    }\n    return process.env.PUBLIC_URL + \"/img/is-logo-dark.png\";\n};\n\nconst getLogoDisplay = (isMobile: boolean, mobileLogo: boolean) => {\n    if (isMobile && !mobileLogo) {\n        return \"d-none\";\n    } else {\n        return \"logo\";\n    }\n};\n\nexport const Logo = (props: any) => {\n    const isMobile = !utils.getBreakPoint(useBreakpoint()).includes(\"lg\");\n    return (\n        <div\n            className={getLogoDisplay(isMobile, props.mobileLogo)}\n            style={{ width: `${getLogoWidthGutter(props, isMobile)}` }}\n        >\n            <img src={getLogo(props)} alt={`${APP_NAME} logo`} />\n        </div>\n    );\n};\n\nconst mapStateToProps = ({ theme }: IState) => {\n    const { navCollapsed, navType } = theme as ITheme;\n    return { navCollapsed, navType };\n};\n\nexport default connect(mapStateToProps)(Logo);\n"]},"metadata":{},"sourceType":"module"}