{"ast":null,"code":"var _jsxFileName = \"/home/vlad/github/react-emilus-boilerplate/src/components/layout-components/SideNav.tsx\";\nimport React, { useEffect } from \"react\";\nimport { Layout } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { SIDE_NAV_WIDTH, SIDE_NAV_DARK, NAV_TYPE_SIDE } from \"../../constants/ThemeConstant\";\nimport { Scrollbars } from \"react-custom-scrollbars\";\nimport MenuContent from \"./MenuContent\";\nimport TranslateText from \"../../utils/translate\";\nimport { APP_NAME } from \"../../configs/AppConfig\";\nconst {\n  Sider\n} = Layout;\nexport const SideNav = ({\n  navCollapsed,\n  sideNavTheme,\n  routeInfo,\n  hideGroupTitle,\n  localization = true\n}) => {\n  const props = {\n    sideNavTheme,\n    routeInfo,\n    hideGroupTitle,\n    localization\n  };\n  useEffect(() => {\n    if (routeInfo) {\n      const title = routeInfo.title;\n      document.title = `${TranslateText(title)} | ${APP_NAME}`;\n    } else {\n      document.title = APP_NAME;\n    }\n  }, [routeInfo]);\n  return /*#__PURE__*/React.createElement(Sider, {\n    className: `side-nav ${sideNavTheme === SIDE_NAV_DARK ? \"side-nav-dark\" : \"\"}`,\n    width: SIDE_NAV_WIDTH,\n    collapsed: navCollapsed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Scrollbars, {\n    autoHide: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MenuContent, Object.assign({\n    type: NAV_TYPE_SIDE\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }))));\n};\n\nconst mapStateToProps = ({\n  theme\n}) => {\n  const {\n    navCollapsed,\n    sideNavTheme\n  } = theme;\n  return {\n    navCollapsed,\n    sideNavTheme\n  };\n};\n\nexport default connect(mapStateToProps)(SideNav);","map":{"version":3,"sources":["/home/vlad/github/react-emilus-boilerplate/src/components/layout-components/SideNav.tsx"],"names":["React","useEffect","Layout","connect","SIDE_NAV_WIDTH","SIDE_NAV_DARK","NAV_TYPE_SIDE","Scrollbars","MenuContent","TranslateText","APP_NAME","Sider","SideNav","navCollapsed","sideNavTheme","routeInfo","hideGroupTitle","localization","props","title","document","mapStateToProps","theme"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,MAAvB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SACEC,cADF,EAEEC,aAFF,EAGEC,aAHF,QAIO,+BAJP;AAKA,SAASC,UAAT,QAA2B,yBAA3B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAGA,OAAOC,aAAP,MAA0B,uBAA1B;AACA,SAASC,QAAT,QAAyB,yBAAzB;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAYT,MAAlB;AAMA,OAAO,MAAMU,OAAO,GAAG,CAAC;AACtBC,EAAAA,YADsB;AAEtBC,EAAAA,YAFsB;AAGtBC,EAAAA,SAHsB;AAItBC,EAAAA,cAJsB;AAKtBC,EAAAA,YAAY,GAAG;AALO,CAAD,KAMH;AAClB,QAAMC,KAAK,GAAG;AAAEJ,IAAAA,YAAF;AAAgBC,IAAAA,SAAhB;AAA2BC,IAAAA,cAA3B;AAA2CC,IAAAA;AAA3C,GAAd;AACAhB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIc,SAAJ,EAAe;AACb,YAAMI,KAAK,GAAGJ,SAAS,CAACI,KAAxB;AACAC,MAAAA,QAAQ,CAACD,KAAT,GAAkB,GAAEV,aAAa,CAACU,KAAD,CAAQ,MAAKT,QAAS,EAAvD;AACD,KAHD,MAGO;AACLU,MAAAA,QAAQ,CAACD,KAAT,GAAiBT,QAAjB;AACD;AACF,GAPQ,EAON,CAACK,SAAD,CAPM,CAAT;AAQA,sBACE,oBAAC,KAAD;AACE,IAAA,SAAS,EAAG,YACVD,YAAY,KAAKT,aAAjB,GAAiC,eAAjC,GAAmD,EACpD,EAHH;AAIE,IAAA,KAAK,EAAED,cAJT;AAKE,IAAA,SAAS,EAAES,YALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE,oBAAC,UAAD;AAAY,IAAA,QAAQ,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAEP;AAAnB,KAAsCY,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CAPF,CADF;AAaD,CA7BM;;AA+BP,MAAMG,eAAe,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAuB;AAC7C,QAAM;AAAET,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,MAAiCQ,KAAvC;AACA,SAAO;AAAET,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,GAAP;AACD,CAHD;;AAKA,eAAeX,OAAO,CAACkB,eAAD,CAAP,CAAyBT,OAAzB,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { Layout } from \"antd\";\nimport { connect } from \"react-redux\";\nimport {\n  SIDE_NAV_WIDTH,\n  SIDE_NAV_DARK,\n  NAV_TYPE_SIDE,\n} from \"../../constants/ThemeConstant\";\nimport { Scrollbars } from \"react-custom-scrollbars\";\nimport MenuContent from \"./MenuContent\";\nimport { IState } from \"../../redux/reducers\";\nimport { ITheme } from \"../../redux/reducers/Theme\";\nimport TranslateText from \"../../utils/translate\";\nimport { APP_NAME } from \"../../configs/AppConfig\";\n\nconst { Sider } = Layout;\n\ninterface SideNavProps {\n  [key: string]: any;\n}\n\nexport const SideNav = ({\n  navCollapsed,\n  sideNavTheme,\n  routeInfo,\n  hideGroupTitle,\n  localization = true,\n}: SideNavProps) => {\n  const props = { sideNavTheme, routeInfo, hideGroupTitle, localization };\n  useEffect(() => {\n    if (routeInfo) {\n      const title = routeInfo.title;\n      document.title = `${TranslateText(title)} | ${APP_NAME}`;\n    } else {\n      document.title = APP_NAME;\n    }\n  }, [routeInfo]);\n  return (\n    <Sider\n      className={`side-nav ${\n        sideNavTheme === SIDE_NAV_DARK ? \"side-nav-dark\" : \"\"\n      }`}\n      width={SIDE_NAV_WIDTH}\n      collapsed={navCollapsed}\n    >\n      <Scrollbars autoHide>\n        <MenuContent type={NAV_TYPE_SIDE} {...props} />\n      </Scrollbars>\n    </Sider>\n  );\n};\n\nconst mapStateToProps = ({ theme }: IState) => {\n  const { navCollapsed, sideNavTheme } = theme as ITheme;\n  return { navCollapsed, sideNavTheme };\n};\n\nexport default connect(mapStateToProps)(SideNav);\n"]},"metadata":{},"sourceType":"module"}